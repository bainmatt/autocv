[{"path":"https://bainmatt.github.io/autocv/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 autocv authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://bainmatt.github.io/autocv/articles/demo-resume.html","id":"a-minimal-reproducible-example","dir":"Articles","previous_headings":"","what":"A minimal reproducible example","title":"Demo of autocv","text":"following end--end example runs temporary environment local machine, constructing project directory, application directory, resume, keyword reports, autocv-supplied example job posting, template datasets, template stylesheets.","code":"autocv::in_tmp_env({   message(\"1. Build the project directory...\")   autocv::build_base_directory()    data(example_job_metadata)   app_df <- autocv::construct_app_metadata(app_info = example_job_metadata)    message(\"\")   message(\"2. Build the application...\")   autocv::build_app_directory(app_df = app_df, open = FALSE)    message(\"\")   message(\"3. Render the application...\")   # autocv::render_app(cover = FALSE, email = FALSE)   autocv::render_resume_plain()    message(\"\")   message(\"4. Check application keywords...\")   report_df <- autocv::check_skills()   print(report_df)    message(\"\")   message(\"5. Inspect application metadata...\")   app_df <- autocv::get_app_info()   print(app_df) })"},{"path":"https://bainmatt.github.io/autocv/articles/demo-resume.html","id":"a-step-by-step-example","dir":"Articles","previous_headings":"","what":"A step-by-step example","title":"Demo of autocv","text":"Let us now walk steps greater depth, keeping track evolving file tree copying generated documents temporary environment working directory reference later.","code":""},{"path":"https://bainmatt.github.io/autocv/articles/demo-resume.html","id":"step-1-build-the-project-directory","dir":"Articles","previous_headings":"A step-by-step example","what":"Step 1: Build the project directory","title":"Demo of autocv","text":"begin creating basic file tree upon build tailored job applications. file tree includes placeholder output/ applications/ directories store generated documents, well input/ directory containing template spreadsheets resume_data.xlsx (see example_skill_data example_position_data), cover_data.xlsx (see example_contact_data example_text_data), job_metadata.yml (example_job_metadata). .Rprofile file containing path environment variables automatically generated, along Rproj file notebooks resume.Rmd cover.Rmd, used render job application documents data contained aforementioned spreadsheets.","code":"autocv::in_tmp_env({   autocv::build_base_directory() }) #>  #> ── Setting project paths ─────────────────────────────────────────────────────── #>  #> Your current path is: /tmp/RtmpLgMA5W/ #> Set your desired project path relative to your current path: #>  #> You entered the path: /tmp/RtmpLgMA5W/ #>  #> Setting your project root to: /tmp/RtmpLgMA5W/ #> Created file .here in /tmp/RtmpLgMA5W . Please start a new R session in the new project directory. #> ✔ Writing file: .Rprofile #> ✔ Writing file: mycv.Rproj #>  #> ℹ Writing to: ../../../../../../tmp/RtmpLgMA5W #>  #> ── Creating directory tree ───────────────────────────────────────────────────── #> ! Folder already exists: . (skipping) #> ✔ Creating folder: R #> ✔ Creating folder: R/input #> ✔ Creating folder: R/output #> ✔ Creating folder: R/applications #>  #> ── Writing skeleton data files ───────────────────────────────────────────────── #> ✔ Writing file: R/input/resume_data.xlsx #> ✔ Writing file: R/input/cover_data.xlsx #> ✔ Writing file: R/input/job_metadata.yml #>  #> ── Writing resume-building notebooks ─────────────────────────────────────────── #> ✔ Writing file: resume.Rmd #> ✔ Writing file: cv.Rmd #> Current file tree: #> /tmp/RtmpLgMA5W/. #> ├── R #> │   ├── applications #> │   ├── input #> │   │   ├── cover_data.xlsx #> │   │   ├── job_metadata.yml #> │   │   └── resume_data.xlsx #> │   └── output #> ├── cv.Rmd #> ├── filea40937911238 #> ├── filea4095d77236 #> ├── filea40963caf001 #> ├── filea4097cc5b56 #> ├── libloc_177_2e46c0fc1ffb1091.rds #> ├── libloc_239_283e8cdc8a036cdc.rds #> ├── libloc_246_4744b1836fb1a8fb.rds #> ├── mycv.Rproj #> ├── resume.Rmd #> └── rmarkdown-stra409139b50fe.html"},{"path":"https://bainmatt.github.io/autocv/articles/demo-resume.html","id":"step-2-build-the-application-directory","dir":"Articles","previous_headings":"A step-by-step example","what":"Step 2: Build the application directory","title":"Demo of autocv","text":"project directory constructed template data files copied , can now generate tailored job applications. , update fields input/job_metadata.yml file information relevant job interest, namely id, company, position, posting_url fields, well optionally populating base_id, portal_url, linkedin_url, recruiter_email, notes fields. additional information, see example_job_metadata.","code":"autocv::in_tmp_env({   data(example_job_metadata)   app_df <- autocv::construct_app_metadata(app_info = example_job_metadata)   autocv::build_app_directory(app_df = app_df, open = FALSE) }) #>  #> ℹ Writing to: ../../../../../../tmp/RtmpLgMA5W/R/applications/2024-07-data-science/2024-09-28-01-company-name-data-scientist-AB #>  #> ── Creating directory tree ───────────────────────────────────────────────────── #> ✔ Creating folder: input #> ✔ Creating folder: output #>  #> ── Copying base data files into directory ────────────────────────────────────── #> ✔ Writing file: input/resume_data_AB.xlsx #> ✔ Writing file: input/cover_data_AB.xlsx #>  #> ── Writing application metadata ──────────────────────────────────────────────── #> ✔ Writing file: metadata_AB.yml #> ✔ Writing file: ../log.rds #>  #> ── Downloading job posting and building a skill report ───────────────────────── #> ✔ Writing file: input/posting_AB.txt #>  #> ── Keyword check: Posting vs job terms list ──────────────────────────────────── #> ✔ Writing file: output/keyword_counts_AB.csv #> # A tibble: 1 × 2 #>   term     matches #>   <chr>      <dbl> #> 1 Disabled       4 #>  #> ── Keyword check: Posting vs data terms list ─────────────────────────────────── #> ✔ Writing file: output/skill_counts_posting_AB.csv #> # A tibble: 55 × 2 #>    term                        matches #>    <chr>                         <dbl> #>  1 Data Science                     73 #>  2 Data Analysis                    15 #>  3 UX                                1 #>  4 Statistics                       29 #>  5 Cloud Computing                   4 #>  6 Insights                         10 #>  7 Computer Science                  7 #>  8 Survey Data                       1 #>  9 Algorithms                        4 #> 10 Unstructured Data                 2 #> 11 Domain Knowledge                  3 #> 12 Mathematics                       3 #> 13 Data-Driven                       3 #> 14 Statistical Knowledge             1 #> 15 Data Visualization                3 #> 16 Machine Learning                  8 #> 17 C                                 8 #> 18 Classification                    3 #> 19 Data Mining                       4 #> 20 Statistical Learning              3 #> 21 Data Collection                   1 #> 22 Big Data                         13 #> 23 Exploratory Data Analysis         2 #> 24 Data Management                   2 #> 25 Data Cleaning                     1 #> 26 Predictive Models                 3 #> 27 Models                            2 #> 28 Data-Driven Decisions             1 #> 29 Statistical Analysis              2 #> 30 Data Preprocessing                1 #> 31 Feature Engineering               1 #> 32 Model Selection                   1 #> 33 Implementation                    1 #> 34 Analytical Techniques             1 #> 35 Analytical                        1 #> 36 Large Datasets                    2 #> 37 Non-Technical Audiences           1 #> 38 Critical Thinking                 1 #> 39 Data-Driven Decision-Making       1 #> 40 Data Analytics                    1 #> 41 Cloud Services                    1 #> 42 Python                            1 #> 43 R                                 2 #> 44 Data Engineering                  1 #> 45 HTML                              4 #> 46 Statistical Modeling              1 #> 47 Causal Inference                  1 #> 48 Collaboration                     1 #> 49 Signal Processing                 1 #> 50 Spark                             1 #> 51 Spark SQL                         1 #> 52 Data Ethics                       1 #> 53 ETL                               1 #> 54 ELT                               1 #> 55 Developers                        1 #>  #> ✔ Opening: . #> Current file tree: #> /tmp/RtmpLgMA5W/./R/applications #> └── 2024-07-data-science #>     ├── 2024-09-28-01-company-name-data-scientist-AB #>     │   ├── input #>     │   │   ├── cover_data_AB.xlsx #>     │   │   ├── posting_AB.txt #>     │   │   ├── report.xlsx #>     │   │   └── resume_data_AB.xlsx #>     │   ├── metadata_AB.yml #>     │   └── output #>     │       ├── keyword_counts_AB.csv #>     │       └── skill_counts_posting_AB.csv #>     └── log.rds"},{"path":"https://bainmatt.github.io/autocv/articles/demo-resume.html","id":"step-3-edit-the-application","dir":"Articles","previous_headings":"A step-by-step example","what":"Step 3: Edit the application","title":"Demo of autocv","text":"building application directory, run autocv::edit_app(). open spreadsheets, namely resume_data.xlsx cover_data.xlsx, containing data used generate application documents. Edit entries metadata documents desired suit job question.","code":""},{"path":"https://bainmatt.github.io/autocv/articles/demo-resume.html","id":"step-4-render-the-application","dir":"Articles","previous_headings":"A step-by-step example","what":"Step 4: Render the application","title":"Demo of autocv","text":"’ve tailored information application job question, ready render application documents.","code":"autocv::in_tmp_env({   # autocv::render_app(cover = FALSE, email = FALSE)   autocv::render_resume_plain() }) #>  #> ── Building resume.txt ───────────────────────────────────────────────────────── #> ✔ Writing file: output/resume_yourname_AB.txt #> Current file tree: #> /tmp/RtmpLgMA5W/./R/applications #> └── 2024-07-data-science #>     ├── 2024-09-28-01-company-name-data-scientist-AB #>     │   ├── input #>     │   │   ├── cover_data_AB.xlsx #>     │   │   ├── posting_AB.txt #>     │   │   ├── report.xlsx #>     │   │   └── resume_data_AB.xlsx #>     │   ├── metadata_AB.yml #>     │   └── output #>     │       ├── keyword_counts_AB.csv #>     │       ├── resume_yourname_AB.txt #>     │       └── skill_counts_posting_AB.csv #>     └── log.rds"},{"path":"https://bainmatt.github.io/autocv/articles/demo-resume.html","id":"step-5-check-application-keywords","dir":"Articles","previous_headings":"A step-by-step example","what":"Step 5: Check application keywords","title":"Demo of autocv","text":"generated resume, can now analyze contents determine data-related keywords included whether align keywords job posting. step performs three independent checks – identify general job-related keywords job posting, identify data science keywords job posting, identify data science keywords resume – followed keyword match data science terms job posting mentioned resume, either skills section body text. following spreadsheets generated step: keyword_counts_AB.csv: General keyword counts job posting skill_counts_posting_AB.csv: Data-related keyword counts job posting skill_counts_resume_AB.csv: Data-related keyword counts generated resume skill_report_AB.csv: Job posting keywords included generated resume","code":"autocv::in_tmp_env({   report_df <- autocv::check_skills()   print(report_df) }) #>  #> ── Keyword check: Posting vs job terms list ──────────────────────────────────── #> ! File already exists: output/keyword_counts_AB.csv (skipping) #>       term matches #> 1 Disabled       4 #>  #> ── Keyword check: Posting vs data terms list ─────────────────────────────────── #> ! File already exists: output/skill_counts_posting_AB.csv (skipping) #>                           term matches #> 1                 Data Science      73 #> 2                Data Analysis      15 #> 3                           UX       1 #> 4                   Statistics      29 #> 5              Cloud Computing       4 #> 6                     Insights      10 #> 7             Computer Science       7 #> 8                  Survey Data       1 #> 9                   Algorithms       4 #> 10           Unstructured Data       2 #> 11            Domain Knowledge       3 #> 12                 Mathematics       3 #> 13                 Data-Driven       3 #> 14       Statistical Knowledge       1 #> 15          Data Visualization       3 #> 16            Machine Learning       8 #> 17                           C       8 #> 18              Classification       3 #> 19                 Data Mining       4 #> 20        Statistical Learning       3 #> 21             Data Collection       1 #> 22                    Big Data      13 #> 23   Exploratory Data Analysis       2 #> 24             Data Management       2 #> 25               Data Cleaning       1 #> 26           Predictive Models       3 #> 27                      Models       2 #> 28       Data-Driven Decisions       1 #> 29        Statistical Analysis       2 #> 30          Data Preprocessing       1 #> 31         Feature Engineering       1 #> 32             Model Selection       1 #> 33              Implementation       1 #> 34       Analytical Techniques       1 #> 35                  Analytical       1 #> 36              Large Datasets       2 #> 37     Non-Technical Audiences       1 #> 38           Critical Thinking       1 #> 39 Data-Driven Decision-Making       1 #> 40              Data Analytics       1 #> 41              Cloud Services       1 #> 42                      Python       1 #> 43                           R       2 #> 44            Data Engineering       1 #> 45                        HTML       4 #> 46        Statistical Modeling       1 #> 47            Causal Inference       1 #> 48               Collaboration       1 #> 49           Signal Processing       1 #> 50                       Spark       1 #> 51                   Spark SQL       1 #> 52                 Data Ethics       1 #> 53                         ETL       1 #> 54                         ELT       1 #> 55                  Developers       1 #>  #> ── Keyword check: Resume vs data terms list ──────────────────────────────────── #> ✔ Writing file: output/skill_counts_resume_AB.csv #> # A tibble: 16 × 2 #>    term               matches #>    <chr>                <dbl> #>  1 GitHub                   3 #>  2 Python                   2 #>  3 R                        2 #>  4 SQL                      2 #>  5 Machine Learning         1 #>  6 SciPy                    3 #>  7 Scikit-Learn             2 #>  8 TensorFlow               2 #>  9 DevOps                   1 #> 10 Git                      1 #> 11 GitHub Actions           2 #> 12 ML Pipelines             1 #> 13 Data Modeling            1 #> 14 CI/CD Pipelines          1 #> 15 Bayesian Inference       1 #> 16 Documentation            2 #>  #> ── Keyword report: Resume vs posting keywords ────────────────────────────────── #> Not in your skill set: #> 1. Algorithms #>  #> 2. Analytical #>  #> 3. Analytical Techniques #>  #> 4. C #>  #> 5. Cloud Computing #>  #> 6. Cloud Services #>  #> 7. Collaboration #>  #> 8. Computer Science #>  #> 9. Data Analysis #>  #> 10. Data Analytics #>  #> 11. Data Cleaning #>  #> 12. Data Collection #>  #> 13. Data Engineering #>  #> 14. Data Ethics #>  #> 15. Data Mining #>  #> 16. Data Science #>  #> 17. Data-Driven #>  #> 18. Data-Driven Decision-Making #>  #> 19. Data-Driven Decisions #>  #> 20. Developers #>  #> 21. Domain Knowledge #>  #> 22. ELT #>  #> 23. Implementation #>  #> 24. Insights #>  #> 25. Large Datasets #>  #> 26. Mathematics #>  #> 27. Models #>  #> 28. Non-Technical Audiences #>  #> 29. Predictive Models #>  #> 30. Signal Processing #>  #> 31. Spark SQL #>  #> 32. Statistical Knowledge #>  #> 33. Survey Data #>  #> 34. Unstructured Data #>  #> 35. UX #>  #>  #>  #> ✔ Writing file: output/skill_report_AB.csv #>  #>  #>  #> • 5.45% of the posting keywords are in your resume. #>                           term count matches in_my_skill_set in_my_skill_list #> 1             Machine Learning     8       1            TRUE            FALSE #> 2                       Python     1       2            TRUE             TRUE #> 3                            R     2       2            TRUE             TRUE #> 4                 Data Science    73       0           FALSE            FALSE #> 5                Data Analysis    15       0           FALSE            FALSE #> 6                           UX     1       0           FALSE            FALSE #> 7                   Statistics    29       0            TRUE            FALSE #> 8              Cloud Computing     4       0           FALSE            FALSE #> 9                     Insights    10       0           FALSE            FALSE #> 10            Computer Science     7       0           FALSE            FALSE #> 11                 Survey Data     1       0           FALSE            FALSE #> 12                  Algorithms     4       0           FALSE            FALSE #> 13           Unstructured Data     2       0           FALSE            FALSE #> 14            Domain Knowledge     3       0           FALSE            FALSE #> 15                 Mathematics     3       0           FALSE            FALSE #> 16                 Data-Driven     3       0           FALSE            FALSE #> 17       Statistical Knowledge     1       0           FALSE            FALSE #> 18          Data Visualization     3       0            TRUE            FALSE #> 19                           C     8       0           FALSE            FALSE #> 20              Classification     3       0            TRUE            FALSE #> 21                 Data Mining     4       0           FALSE            FALSE #> 22        Statistical Learning     3       0            TRUE            FALSE #> 23             Data Collection     1       0           FALSE            FALSE #> 24                    Big Data    13       0            TRUE            FALSE #> 25   Exploratory Data Analysis     2       0            TRUE            FALSE #> 26             Data Management     2       0            TRUE            FALSE #> 27               Data Cleaning     1       0           FALSE            FALSE #> 28           Predictive Models     3       0           FALSE            FALSE #> 29                      Models     2       0           FALSE            FALSE #> 30       Data-Driven Decisions     1       0           FALSE            FALSE #> 31        Statistical Analysis     2       0            TRUE            FALSE #> 32          Data Preprocessing     1       0            TRUE            FALSE #> 33         Feature Engineering     1       0            TRUE            FALSE #> 34             Model Selection     1       0            TRUE            FALSE #> 35              Implementation     1       0           FALSE            FALSE #> 36       Analytical Techniques     1       0           FALSE            FALSE #> 37                  Analytical     1       0           FALSE            FALSE #> 38              Large Datasets     2       0           FALSE            FALSE #> 39     Non-Technical Audiences     1       0           FALSE            FALSE #> 40           Critical Thinking     1       0            TRUE            FALSE #> 41 Data-Driven Decision-Making     1       0           FALSE            FALSE #> 42              Data Analytics     1       0           FALSE            FALSE #> 43              Cloud Services     1       0           FALSE            FALSE #> 44            Data Engineering     1       0           FALSE            FALSE #> 45                        HTML     4       0            TRUE            FALSE #> 46        Statistical Modeling     1       0            TRUE            FALSE #> 47            Causal Inference     1       0            TRUE            FALSE #> 48               Collaboration     1       0           FALSE            FALSE #> 49           Signal Processing     1       0           FALSE            FALSE #> 50                       Spark     1       0            TRUE            FALSE #> 51                   Spark SQL     1       0           FALSE            FALSE #> 52                 Data Ethics     1       0           FALSE            FALSE #> 53                         ETL     1       0            TRUE            FALSE #> 54                         ELT     1       0           FALSE            FALSE #> 55                  Developers     1       0           FALSE            FALSE #> Current file tree: #> /tmp/RtmpLgMA5W/./R/applications #> └── 2024-07-data-science #>     ├── 2024-09-28-01-company-name-data-scientist-AB #>     │   ├── input #>     │   │   ├── cover_data_AB.xlsx #>     │   │   ├── posting_AB.txt #>     │   │   ├── report.xlsx #>     │   │   └── resume_data_AB.xlsx #>     │   ├── metadata_AB.yml #>     │   └── output #>     │       ├── keyword_counts_AB.csv #>     │       ├── resume_yourname_AB.txt #>     │       ├── skill_counts_posting_AB.csv #>     │       ├── skill_counts_resume_AB.csv #>     │       └── skill_report_AB.csv #>     └── log.rds"},{"path":"https://bainmatt.github.io/autocv/articles/demo-resume.html","id":"step-6-inspect-application-metadata","dir":"Articles","previous_headings":"A step-by-step example","what":"Step 6: Inspect application metadata","title":"Demo of autocv","text":"Every step far yielded metadata automatically stored log file, row corresponding unique job application. point wish review information existing job application, can easily retrieve log.","code":"autocv::in_tmp_env({   app_df <- autocv::get_app_info()   print(app_df) }) #>   id      company       position status date_applied days_since notes #> 1 AB Company Name Data Scientist    ipr            /          /     /"},{"path":"https://bainmatt.github.io/autocv/articles/demo-resume.html","id":"step-7-update-application-metadata","dir":"Articles","previous_headings":"A step-by-step example","what":"Step 7: Update application metadata","title":"Demo of autocv","text":"point can update job application log new information desired, changes status application note job question.","code":"autocv::in_tmp_env({   autocv::apply_to(app_id = \"AB\")   autocv::update_app_info(app_id = \"AB\", notes = \"Excited about this role\")    app_df <- autocv::get_app_info()   print(app_df) }) #> • Modifying field: status (ipr -> applied) #> • Modifying field: date_applied (/ -> 2024-09-28) #>  #> ! File already exists: metadata_AB.yml (overwriting) #> ! File already exists: ../log.rds (updating entry for 'AB') #> • Modifying field: notes (/ -> Excited about this role) #>  #> ! File already exists: metadata_AB.yml (overwriting) #> ! File already exists: ../log.rds (updating entry for 'AB') #>   id      company       position  status date_applied days_since #> 1 AB Company Name Data Scientist applied   2024-09-28          0 #>                  notes #> 1 Excited about thi..."},{"path":"https://bainmatt.github.io/autocv/articles/demo-resume.html","id":"review-the-generated-documents","dir":"Articles","previous_headings":"","what":"Review the generated documents","title":"Demo of autocv","text":"Let’s conclude transferring documents generated within temporary environment long-term memory. autocv-generated application document displayed reference. following documents generated autocv: resume_yourname_AB.pdf (PDF resume): Unable display PDF file. Download instead.  cv_yourname.html (web-based CV): Unable display HTML file. Download instead.  resume_yourname_AB.txt (plain text resume): Unable display text file. Download instead.  ! steps (“build, edit, render, check” “inspect, update”), neatly encapsulated within autocv’s core user interface, need construct beautiful, tailored, easily tracked, resume documents job applications.","code":"autocv::in_tmp_env({   source_paths <- as.character(autocv::get_app_info(     id = \"AB\",     field = c(       \"resume_plain_path\",       \"keyword_counts_posting\",       \"skill_counts_posting\",       \"skill_counts_resume\",       \"skill_report\"     )   )[2:6])   target_dir <- file.path(fs::path_wd(), \"output\")   if (!dir.exists(target_dir)) { dir.create(target_dir) }   target_paths <- file.path(target_dir, basename(source_paths))    autocv::copy_files(     source_paths = source_paths,     target_paths = target_paths   ) }) #> ! File already exists: output/resume_yourname_AB.txt (skipping) #> ! File already exists: output/keyword_counts_AB.csv (skipping) #> ! File already exists: output/skill_counts_posting_AB.csv (skipping) #> ! File already exists: output/skill_counts_resume_AB.csv (skipping) #> ! File already exists: output/skill_report_AB.csv (skipping) #> Working directory output file tree: #> /home/runner/work/autocv/autocv/vignettes/output #> ├── cv_yourname.html #> ├── keyword_counts_AB.csv #> ├── resume_yourname_AB.pdf #> ├── resume_yourname_AB.txt #> ├── skill_counts_posting_AB.csv #> ├── skill_counts_resume_AB.csv #> └── skill_report_AB.csv # NOTE: eval is off due to LaTeX rendering issues when running GitHub workflow autocv::in_tmp_env({   autocv::render_cv_as_html()   autocv::render_resume() }) autocv::in_tmp_env({   source_paths <- c(     as.character(autocv::get_app_info(id = \"AB\", field = \"resume_path\")[2]),     file.path(autocv::get_path_to(\"output\"), \"cv_yourname.html\")   )   target_dir <- file.path(fs::path_wd(), \"output\")   if (!dir.exists(target_dir)) { dir.create(target_dir) }   target_paths <- file.path(target_dir, basename(source_paths))    autocv::copy_files(     source_paths = source_paths,     target_paths = target_paths   ) }) filename <- \"cv_yourname.html\" source_path <- file.path(   autocv::get_path_to(\"notebooks\"), \"vignettes\", \"output\", filename ) target_path <- file.path(   autocv::get_path_to(\"notebooks\"), \"docs\", filename ) file.copy(source_path, target_path, overwrite = TRUE) #> [1] TRUE"},{"path":"https://bainmatt.github.io/autocv/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matthew Bain. Author, maintainer.","code":""},{"path":"https://bainmatt.github.io/autocv/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bain M (2024). autocv: Generate ATS- Web-Friendly Resume Documents Spreadsheets. R package version 0.0.1, https://bainmatt.github.io/autocv.","code":"@Manual{,   title = {autocv: Generate ATS- and Web-Friendly Resume Documents from Spreadsheets},   author = {Matthew Bain},   year = {2024},   note = {R package version 0.0.1},   url = {https://bainmatt.github.io/autocv}, }"},{"path":"https://bainmatt.github.io/autocv/index.html","id":"autocv","dir":"","previous_headings":"","what":"Generate ATS- and Web-Friendly Resume Documents from Spreadsheets","title":"Generate ATS- and Web-Friendly Resume Documents from Spreadsheets","text":"autocv package provides simple, unified workflow constructing curriculum vitae (related job application documents) data stored spreadsheets.","code":""},{"path":[]},{"path":"https://bainmatt.github.io/autocv/index.html","id":"user-interface","dir":"","previous_headings":"Overview","what":"User Interface","title":"Generate ATS- and Web-Friendly Resume Documents from Spreadsheets","text":"core user interface encapsulated following sequence commands building fine-tuning job application: Build application directory. Given job interest, construct directory containing template data files folders required build tailored job application. Edit application data files. Open data files given job interest select information (sections, entries, skills, ordering) include exclude application. Render application documents. given job interest, use tailored data files generate requested application documents (plain text /PDF resume, PDF HTML curriculum vitae, cover letter, etc.). Check application keywords. Given term bank relevant job keywords well job posting application documents given job interest, extract keywords job application cross-check job posting. Review job application data. Retrieve information existing job applications.","code":""},{"path":"https://bainmatt.github.io/autocv/index.html","id":"api-reference","dir":"","previous_headings":"Overview","what":"API reference","title":"Generate ATS- and Web-Friendly Resume Documents from Spreadsheets","text":"Find documentation functions , along documentation additional functions included package developers may tweak extend functionality desired.","code":""},{"path":"https://bainmatt.github.io/autocv/index.html","id":"data-reference","dir":"","previous_headings":"Overview","what":"Data reference","title":"Generate ATS- and Web-Friendly Resume Documents from Spreadsheets","text":"Included package several template data files user modify reflect work experience, skills, application text, metadata job interest. core data files : example_skill_data: table rows representing job-relevant skills, along ratings skill level flags indicating whether include skill present job application. example_position_data: table rows representing professional roles, degrees certificates earned, professional projects, etc., optional fields including title, company, timeline, description text. example_contact_data: table rows containing personal contact information associated links (address, email, personal website, etc.). example_text_data: table rows containing textual building blocks job application, resume bio cover letter. example_job_metadata: named list fields containing details given job application, company, position, associated URLs, unique identifier. example_posting: string containing text example job posting.","code":""},{"path":"https://bainmatt.github.io/autocv/index.html","id":"example-documents","dir":"","previous_headings":"Overview","what":"Example documents","title":"Generate ATS- and Web-Friendly Resume Documents from Spreadsheets","text":"autocv package includes functions dynamic spreadsheets generating following documents: PDF resume Either general (“base”) resume role pursuing tailored resume, built upon base, modified suit specific job applying. Uses notebook resume.Rmd (see template) spreadsheet resume_data.xlsx (see template, well corresponding example datasets example_skill_data example_position_data). View example . PDF cover letter: cover letter containing company position information job interest. Uses spreadsheet cover_data.xlsx (see template, well corresponding example datasets example_contact_data example_text_data). Plain text resume: resume containing information PDF resume relying template files rendered plain text format simplicity ease data entry. View example . Plain text cover letter: cover letter containing information PDF cover letter relying template files rendered plain text format simplicity ease data entry. HTML curriculum vitae: informal, web-friendly curriculum vitae containing ongoing record professional history, graphical breakdown skill set, space include image. Relies notebook cv.Rmd (see template) spreadsheet files PDF plain text resume. View example . PDF curriculum vitae: curriculum vitae containing information HTML version relying template files rendered PDF document offline distribution. Professional profile curriculum vitae: streamlined curriculum vitae, rendered PDF using PDF resume styling, based concise information, provided data spreadsheet, intended compatibility online professional profile LinkedIn. Relies template files PDF plain text resume.","code":""},{"path":"https://bainmatt.github.io/autocv/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Generate ATS- and Web-Friendly Resume Documents from Spreadsheets","text":"package CRAN. like use , can install directly GitHub running following console:","code":"remotes::install_github(\"bainmatt/autocv\")"},{"path":"https://bainmatt.github.io/autocv/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Generate ATS- and Web-Friendly Resume Documents from Spreadsheets","text":"Follow demo illustrating basic end--end workflow get started.","code":""},{"path":"https://bainmatt.github.io/autocv/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Generate ATS- and Web-Friendly Resume Documents from Spreadsheets","text":"project inspired Nick Strayer’s data-driven cv template (exemplar), extends pagedown html_resume template. inspiration design refinements borrowed Matt Leary’s resume repository (examplar). Thank creators projects.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/alert_file_created.html","id":null,"dir":"Reference","previous_headings":"","what":"Issue an alert that a file or folder has been created at the provided path. — alert_file_created","title":"Issue an alert that a file or folder has been created at the provided path. — alert_file_created","text":"alert_file_created issues alert file created. alert_folder_created issues alert folder created.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/alert_file_created.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Issue an alert that a file or folder has been created at the provided path. — alert_file_created","text":"","code":"alert_file_created(file, base_dir = \".\", action = \"\")  alert_folder_created(folder, base_dir = \".\", action = \"\")"},{"path":"https://bainmatt.github.io/autocv/reference/alert_file_created.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Issue an alert that a file or folder has been created at the provided path. — alert_file_created","text":"file (string) absolute path file question. base_dir (string) path (abs relative) root output directory (defaults \".\", project root). action (string) text stating function reacts message (default empty string). folder absolute path directory question.","code":""},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/alert_opening.html","id":null,"dir":"Reference","previous_headings":"","what":"Issue an alert that a file or folder is opening from the provided path. — alert_opening","title":"Issue an alert that a file or folder is opening from the provided path. — alert_opening","text":"Issue alert file folder opening provided path.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/alert_opening.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Issue an alert that a file or folder is opening from the provided path. — alert_opening","text":"","code":"alert_opening(path, base_dir = \".\", action = \"\")"},{"path":"https://bainmatt.github.io/autocv/reference/alert_opening.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Issue an alert that a file or folder is opening from the provided path. — alert_opening","text":"path absolute path file folder question.","code":""},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/alert_writing_to.html","id":null,"dir":"Reference","previous_headings":"","what":"Notify the user of the directory being read from or written to. — alert_writing_to","title":"Notify the user of the directory being read from or written to. — alert_writing_to","text":"alert_writing_to gives base output folder files written. alert_reading_from gives base input folder files read.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/alert_writing_to.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Notify the user of the directory being read from or written to. — alert_writing_to","text":"","code":"alert_writing_to(folder)  alert_reading_from(folder)"},{"path":"https://bainmatt.github.io/autocv/reference/alert_writing_to.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Notify the user of the directory being read from or written to. — alert_writing_to","text":"folder absolute path directory question.","code":""},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/append_skills_to_bullets.html","id":null,"dir":"Reference","previous_headings":"","what":"Append skills to a description field with matching index. — append_skills_to_bullets","title":"Append skills to a description field with matching index. — append_skills_to_bullets","text":"Append skills description field matching index.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/append_skills_to_bullets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append skills to a description field with matching index. — append_skills_to_bullets","text":"","code":"append_skills_to_bullets(   data,   ix,   use_abridged = FALSE,   omit_prefix = \"/\",   sort_appended = FALSE,   skill_set_sorted = NULL )"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/as_filename.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a file name given a folder path, base name, id, and extension. — as_filename","title":"Construct a file name given a folder path, base name, id, and extension. — as_filename","text":"Construct file name given folder path, base name, id, extension.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/as_filename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a file name given a folder path, base name, id, and extension. — as_filename","text":"","code":"as_filename(path, basename, ext, id = NA, sep = \"_\")"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/autocv-package.html","id":null,"dir":"Reference","previous_headings":"","what":"autocv: Generate ATS- and Web-Friendly Resume Documents from Spreadsheets — autocv-package","title":"autocv: Generate ATS- and Web-Friendly Resume Documents from Spreadsheets — autocv-package","text":"autocv collection functions generating resume data stored spreadsheet. includes tools retrieving job postings web, analyzing key words, assessing resume based alignment key words. Spreadsheet templates provided conditional formatting evaluate quality content skills included resume. Functions spreadsheets generating cover letters, well HTML, PDF, LaTeX, plain text resumes, included. HTML version optimized long-form web-hosted CVs, LaTeX version optimized ATS compatibility.","code":""},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/autocv-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"autocv: Generate ATS- and Web-Friendly Resume Documents from Spreadsheets — autocv-package","text":"Maintainer: Matthew Bain bainmatt@outlook.com","code":""},{"path":"https://bainmatt.github.io/autocv/reference/autocv_resources.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the location of template data files on your system. — autocv_resources","title":"Find the location of template data files on your system. — autocv_resources","text":"Find location template data files system.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/autocv_resources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the location of template data files on your system. — autocv_resources","text":"","code":"autocv_resources(path = NULL, inst_dir = c(\"extdata\", \"templates\"))"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/autocv_resources.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the location of template data files on your system. — autocv_resources","text":"","code":"# Obtain a complete list of top-level resources included with autocv: autocv_resources() #> [1] \"css\"       \"figures\"   \"latex\"     \"resources\"  # Obtain a complete list of resources included in the css/ directory: autocv_resources(\"css\") #> [1] \"custom_resume.css\" \"styles_html.css\"   \"styles_pdf.css\"     # Obtain a complete path to the custom_resume.css resource: autocv_resources(\"css/custom_resume.css\") #> [1] \"/home/runner/.cache/R/renv/library/autocv-e7350c3b/linux-ubuntu-jammy/R-4.4/x86_64-pc-linux-gnu/autocv/extdata/css/custom_resume.css\"  # Obtain a complete list of template files included with autocv: autocv_resources(inst_dir = \"templates\") #> [1] \"template_cover_data.xlsx\"  \"template_cv.Rmd\"           #> [3] \"template_job_metadata.yml\" \"template_resume.Rmd\"       #> [5] \"template_resume_data.xlsx\""},{"path":"https://bainmatt.github.io/autocv/reference/build_app_directory.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the file tree and data files for the present application. — build_app_directory","title":"Create the file tree and data files for the present application. — build_app_directory","text":"Create file tree data files present application.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/build_app_directory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the file tree and data files for the present application. — build_app_directory","text":"","code":"build_app_directory(app_df = construct_app_metadata(), open = TRUE)"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/build_app_directory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create the file tree and data files for the present application. — build_app_directory","text":"","code":"# Complete end-to-end example (build -> (edit) -> render -> check) ---------- in_tmp_env({   message(\"1. Building project directory...\")   build_base_directory()      data(example_job_metadata)   app_df <- construct_app_metadata(app_info = example_job_metadata)      message(\"\")   message(\"2. Building application...\")   build_app_directory(app_df = app_df, open = FALSE)      message(\"\")   message(\"3. Rendering application...\")   render_app(cover = FALSE, email = FALSE)      message(\"\")   message(\"4. Checking keywords...\")   report_df <- check_skills()   print(report_df) }) #> 1. Building project directory... #>  #> ── Setting project paths ─────────────────────────────────────────────────────── #>  #> Your current path is: /tmp/RtmpbseB65/ #> Set your desired project path relative to your current path:  #>  #> You entered the path: /tmp/RtmpbseB65/ #>  #> Setting your project root to: /tmp/RtmpbseB65/ #> Created file .here in /tmp/RtmpbseB65 . Please start a new R session in the new project directory. #> ✔ Writing file: .Rprofile #> ✔ Writing file: mycv.Rproj #>  #> ℹ Writing to: ../../../../../../../tmp/RtmpbseB65 #>  #> ── Creating directory tree ───────────────────────────────────────────────────── #> ! Folder already exists: . (skipping)  #> ✔ Creating folder: R #> ✔ Creating folder: R/input #> ✔ Creating folder: R/output #> ✔ Creating folder: R/applications #>  #> ── Writing skeleton data files ───────────────────────────────────────────────── #> ✔ Writing file: R/input/resume_data.xlsx #> ✔ Writing file: R/input/cover_data.xlsx #> ✔ Writing file: R/input/job_metadata.yml #>  #> ── Writing resume-building notebooks ─────────────────────────────────────────── #> ✔ Writing file: resume.Rmd #> ✔ Writing file: cv.Rmd #>  #> 2. Building application... #>  #> ℹ Writing to: ../../../../../../../tmp/RtmpbseB65/R/applications/2024-07-data-science/2024-09-28-01-company-name-data-scientist-AB #>  #> ── Creating directory tree ───────────────────────────────────────────────────── #> ✔ Creating folder: input #> ✔ Creating folder: output #>  #> ── Copying base data files into directory ────────────────────────────────────── #> ✔ Writing file: input/resume_data_AB.xlsx #> ✔ Writing file: input/cover_data_AB.xlsx #>  #> ── Writing application metadata ──────────────────────────────────────────────── #> ✔ Writing file: metadata_AB.yml #> ✔ Writing file: ../log.rds #>  #> ── Downloading job posting and building a skill report ───────────────────────── #> ✔ Writing file: input/posting_AB.txt #>  #> ── Keyword check: Posting vs job terms list ──────────────────────────────────── #> ✔ Writing file: output/keyword_counts_AB.csv #> # A tibble: 1 × 2 #>   term     matches #>   <chr>      <dbl> #> 1 Disabled       4 #>  #> ── Keyword check: Posting vs data terms list ─────────────────────────────────── #> ✔ Writing file: output/skill_counts_posting_AB.csv #> # A tibble: 55 × 2 #>    term                        matches #>    <chr>                         <dbl> #>  1 Data Science                     73 #>  2 Data Analysis                    15 #>  3 UX                                1 #>  4 Statistics                       29 #>  5 Cloud Computing                   4 #>  6 Insights                         10 #>  7 Computer Science                  7 #>  8 Survey Data                       1 #>  9 Algorithms                        4 #> 10 Unstructured Data                 2 #> 11 Domain Knowledge                  3 #> 12 Mathematics                       3 #> 13 Data-Driven                       3 #> 14 Statistical Knowledge             1 #> 15 Data Visualization                3 #> 16 Machine Learning                  8 #> 17 C                                 8 #> 18 Classification                    3 #> 19 Data Mining                       4 #> 20 Statistical Learning              3 #> 21 Data Collection                   1 #> 22 Big Data                         13 #> 23 Exploratory Data Analysis         2 #> 24 Data Management                   2 #> 25 Data Cleaning                     1 #> 26 Predictive Models                 3 #> 27 Models                            2 #> 28 Data-Driven Decisions             1 #> 29 Statistical Analysis              2 #> 30 Data Preprocessing                1 #> 31 Feature Engineering               1 #> 32 Model Selection                   1 #> 33 Implementation                    1 #> 34 Analytical Techniques             1 #> 35 Analytical                        1 #> 36 Large Datasets                    2 #> 37 Non-Technical Audiences           1 #> 38 Critical Thinking                 1 #> 39 Data-Driven Decision-Making       1 #> 40 Data Analytics                    1 #> 41 Cloud Services                    1 #> 42 Python                            1 #> 43 R                                 2 #> 44 Data Engineering                  1 #> 45 HTML                              4 #> 46 Statistical Modeling              1 #> 47 Causal Inference                  1 #> 48 Collaboration                     1 #> 49 Signal Processing                 1 #> 50 Spark                             1 #> 51 Spark SQL                         1 #> 52 Data Ethics                       1 #> 53 ETL                               1 #> 54 ELT                               1 #> 55 Developers                        1 #>  #> ✔ Opening: . #>  #> 3. Rendering application... #>  #> ── Building resume.txt ───────────────────────────────────────────────────────── #> ✔ Writing file: output/resume_yourname_AB.txt #>  #> ── Building resume.pdf ───────────────────────────────────────────────────────── #> ✔ Writing file: output/resume_yourname_AB.pdf #> ✔ All fields are up-to-date. Synchronizing metadata and log... #>  #> ! File already exists: metadata_AB.yml (overwriting)  #> ! File already exists: ../log.rds (updating entry for 'AB')  #> ! Package fontspec Error:  #> (fontspec)                The font \"Helvetica Neue\" cannot be found; this #> (fontspec)                may be but usually is not a fontspec bug. Either #> (fontspec)                there is a typo in the font name/file, the font is #> (fontspec)                not installed (correctly), or there is a bug in #> (fontspec)                the underlying font loading engine #> (fontspec)                (XeTeX/luaotfload). #> Error: LaTeX failed to compile /tmp/RtmpbseB65//./R/applications/2024-07-data-science/2024-09-28-01-company-name-data-scientist-AB/output/resume_yourname_AB.tex. See https://yihui.org/tinytex/r/#debugging for debugging tips. See resume_yourname_AB.log for more info."},{"path":"https://bainmatt.github.io/autocv/reference/build_base_directory.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the file tree and necessary data files to begin building a resume. — build_base_directory","title":"Create the file tree and necessary data files to begin building a resume. — build_base_directory","text":"Create file tree necessary data files begin building resume.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/build_base_directory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the file tree and necessary data files to begin building a resume. — build_base_directory","text":"","code":"build_base_directory(relpath = NULL)"},{"path":"https://bainmatt.github.io/autocv/reference/build_base_directory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the file tree and necessary data files to begin building a resume. — build_base_directory","text":"relpath desired project path relative working directory.","code":""},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/build_base_directory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create the file tree and necessary data files to begin building a resume. — build_base_directory","text":"","code":"in_tmp_env({   build_base_directory() }) #>  #> ── Setting project paths ─────────────────────────────────────────────────────── #>  #> Your current path is: /tmp/RtmpbseB65/ #> Set your desired project path relative to your current path:  #>  #> You entered the path: /tmp/RtmpbseB65/ #>  #> Setting your project root to: /tmp/RtmpbseB65/ #> File .here already exists in /tmp/RtmpbseB65 #> ! File already exists: .Rprofile (skipping)  #> ! File already exists: mycv.Rproj (skipping)  #>  #> ℹ Writing to: ../../../../../../../tmp/RtmpbseB65 #>  #> ── Creating directory tree ───────────────────────────────────────────────────── #> ! Folder already exists: . (skipping)  #> ! Folder already exists: R (skipping)  #> ! Folder already exists: R/input (skipping)  #> ! Folder already exists: R/output (skipping)  #> ! Folder already exists: R/applications (skipping)  #>  #> ── Writing skeleton data files ───────────────────────────────────────────────── #> ! File already exists: R/input/resume_data.xlsx (skipping)  #> ! File already exists: R/input/cover_data.xlsx (skipping)  #> ! File already exists: R/input/job_metadata.yml (skipping)  #>  #> ── Writing resume-building notebooks ─────────────────────────────────────────── #> ! File already exists: resume.Rmd (skipping)  #> ! File already exists: cv.Rmd (skipping)"},{"path":"https://bainmatt.github.io/autocv/reference/build_skill_bars.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a bar chart of skills. — build_skill_bars","title":"Construct a bar chart of skills. — build_skill_bars","text":"Construct bar chart skills.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/build_skill_bars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a bar chart of skills. — build_skill_bars","text":"","code":"build_skill_bars(skill_data)"},{"path":"https://bainmatt.github.io/autocv/reference/build_skill_bars.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Construct a bar chart of skills. — build_skill_bars","text":"Strayer N (2020). datadrivencv. R package version 0.1.0.","code":""},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/build_skill_bars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a bar chart of skills. — build_skill_bars","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(ggplot2) data(\"example_skill_data\", package = \"autocv\") technical_skills <- filter(example_skill_data, key_competency == \"x\") build_skill_bars(technical_skills)"},{"path":"https://bainmatt.github.io/autocv/reference/build_skill_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Build skill list. — build_skill_list","title":"Build skill list. — build_skill_list","text":"Build skill list.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/build_skill_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build skill list. — build_skill_list","text":"","code":"build_skill_list(   skill_data,   sep = c(\" • \", \"\\n\"),   bullet_style = c(\"\", \"-\", \"+\"),   bold_headers = TRUE,   separate_competencies = TRUE,   competencies_header = \"Other\" )"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/build_skill_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a two-column table of skills. — build_skill_table","title":"Build a two-column table of skills. — build_skill_table","text":"Returns string text can rendered LaTeX.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/build_skill_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a two-column table of skills. — build_skill_table","text":"","code":"build_skill_table(skill_data)"},{"path":"https://bainmatt.github.io/autocv/reference/build_skill_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a two-column table of skills. — build_skill_table","text":"skill_data data frame containing skill data.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/build_skill_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a two-column table of skills. — build_skill_table","text":"LaTeX string.","code":""},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/build_skill_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build a two-column table of skills. — build_skill_table","text":"","code":"# Define some data ---------------------------------------------------------- library(dplyr, warn.conflicts = FALSE) skill <- c(\"R\", \"SQL\", \"Excel\", \"Pandas\", \"Feature Engineering\") alias <- c(\"Coding\", \"Coding\", \"Data Analysis\", \"Data Analysis\", \"ML\") skill_data <- dplyr::bind_cols(alias, skill) #> New names: #> • `` -> `...1` #> • `` -> `...2` colnames(skill_data) <- c(\"alias\", \"skill\") print(skill_data) #> # A tibble: 5 × 2 #>   alias         skill               #>   <chr>         <chr>               #> 1 Coding        R                   #> 2 Coding        SQL                 #> 3 Data Analysis Excel               #> 4 Data Analysis Pandas              #> 5 ML            Feature Engineering   # Render -------------------------------------------------------------------- skill_table <- build_skill_table(skill_data) paste(skill_table) #> [1] \"\\\\begin{tabular}{@{}p{0.475\\\\linewidth}p{0.475\\\\linewidth}@{}}\\n\\\\textbf{Coding:} R, SQL&\\\\textbf{Data Analysis:} Excel, Pandas\\\\\\\\\\\\textbf{ML:} Feature Engineering&\\\\end{tabular}\\n\\n\"  # With a larger dataset ----------------------------------------------------- data(\"example_skill_data\", package = \"autocv\") skill_table <- build_skill_table(example_skill_data) paste(skill_table) #> [1] \"\\\\begin{tabular}{@{}p{0.475\\\\linewidth}p{0.475\\\\linewidth}@{}}\\n\\\\textbf{Programming:} R, SQL, Python, MATLAB, Bash&\\\\textbf{Machine Learning:} Beautiful Soup, NumPy, SciPy, Pandas, ArviZ, dplyr (R), Web Scraping, Data Preprocessing, SymPy, Exploratory Data Analysis, TensorFlow, Scikit-Learn, Keras, Feature Engineering, Hyperparameter Tuning, Model Optimization, Model Tuning, ML Pipelines, Supervised Learning, Unsupervised Learning, Dimensionality Reduction, Deep Learning, Reinforcement Learning, Neural Networks, Customer Segmentation, Decision Trees, Clustering, Manifold Learning, Classification, Model Selection\\\\\\\\\\\\textbf{NLP:} SpaCy, Hugging Face, LLMs, Topic Modeling, Transformer Models, Sentiment Analysis&\\\\textbf{Data Visualization:} Matplotlib, ggplot (R), Seaborn (Python), Tableau, Power BI\\\\\\\\\\\\textbf{Data Management:} Excel, NoSQL, Snowflake, PostgreSQL, MySQL, Cassandra, MongoDB, Data Modeling, Data Pipelines, Data Validation, Database Design, Data Warehouses, ETL, Dashboards, Business Intelligence, Microsoft Office Suite&\\\\textbf{Python Development:} MyPy, PyTest, Sphinx, Pydantic\\\\\\\\\\\\textbf{DevOps:} Git, GitHub Actions, Continuous Testing, CI/CD Pipelines, Object-Oriented Programming (OOP)&\\\\textbf{Big Data:} Databricks, Hadoop, Spark, Azure, Google Cloud Platform (GCP), Vertex AI\\\\\\\\\\\\textbf{MLOps:} Kubernetes, Docker, Model Deployment&\\\\textbf{Document Authoring:} LaTeX, Jupyter Notebooks, Google Colab, R Markdown, VSCode\\\\\\\\\\\\textbf{Web Development:} CSS, HTML, Javascript&\\\\textbf{Statistics:} Bayesian Inference, Hypothesis Testing, Statistical Learning, Probability Theory, Statistical Modeling, Convex Optimization, Time Series Analysis, Regression Analysis, Graph Theory, Causal Inference, Matrix Calculus, AB Testing, Applied Mathematics, Statistical Analysis, Inferential Statistics, Machine Learning, Mixture Models, Hierarchical Models, Multivariate Analysis\\\\\\\\\\\\textbf{Soft Skills:} Electroencephalography (EEG), Functional Magnetic Resonance Imaging (fMRI), Scientific Writing, Experimental Design, Critical Thinking, Documentation Writing&\\\\end{tabular}\\n\\n\""},{"path":"https://bainmatt.github.io/autocv/reference/construct_app_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the metadata for a new application. — construct_app_metadata","title":"Create the metadata for a new application. — construct_app_metadata","text":"information also used construct application log entry.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/construct_app_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the metadata for a new application. — construct_app_metadata","text":"","code":"construct_app_metadata(app_info = load_job_info(open = TRUE))"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/construct_app_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create the metadata for a new application. — construct_app_metadata","text":"","code":"data(example_job_metadata) app_df <- construct_app_metadata(app_info = example_job_metadata) app_df_concise <- dplyr::select(app_df, -dplyr::ends_with(c(\"path\", \"url\"))) app_df_concise #>   id base_id               period      company       position recruiter_email #> 1 AB       / 2024-07-data-science Company Name Data Scientist               / #>   status date_created last_updated date_applied date_seq notes #> 1    ipr   2024-09-28   2024-09-28            /       01     /"},{"path":"https://bainmatt.github.io/autocv/reference/copy_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy files and create folders from lists of source and target paths. — copy_files","title":"Copy files and create folders from lists of source and target paths. — copy_files","text":"copy_files copies files source corresponding target paths. create_folders creates folders given target paths.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/copy_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy files and create folders from lists of source and target paths. — copy_files","text":"","code":"copy_files(source_paths, target_paths, base_dir = \".\")  create_folders(target_paths, base_dir = \".\")"},{"path":"https://bainmatt.github.io/autocv/reference/copy_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy files and create folders from lists of source and target paths. — copy_files","text":"source_paths char vector corresponding absolute source paths. target_paths char vector target paths. base_dir root folder report command line messages.","code":""},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/count_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Count keyword occurrences in a file based on a supplied list. — count_terms","title":"Count keyword occurrences in a file based on a supplied list. — count_terms","text":"Count keyword occurrences file based supplied list.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/count_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count keyword occurrences in a file based on a supplied list. — count_terms","text":"","code":"count_terms(   terms,   counts = NULL,   doc,   orderby = c(\"counts\", \"doc\", \"source\"),   filterby = c(\"both\", \"count\", \"matches\") )"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/count_terms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count keyword occurrences in a file based on a supplied list. — count_terms","text":"","code":"# Load example data data(\"example_posting\", package = \"autocv\") terms <- readLines(autocv_resources(\"resources/skill_list.txt\"))  # Generate some random counts counts <- sample(0:10, length(prep_term_list(terms)), replace = TRUE)  posting_counts <- count_terms(   terms = terms,   counts = counts,   doc = example_posting,   orderby = \"doc\",   filterby = \"both\" ) posting_counts #> # A tibble: 23 × 3 #>    term                count matches #>    <chr>               <int>   <dbl> #>  1 XP                      4       3 #>  2 Product Managers        1       2 #>  3 UI                      8       1 #>  4 Data Science            5       3 #>  5 Decision-Making         3       1 #>  6 Analytical Thinking     4       1 #>  7 Analytical              1       2 #>  8 Business Decisions      8       1 #>  9 Experiments             6       2 #> 10 Analytic Frameworks     2       1 #> # ℹ 13 more rows"},{"path":"https://bainmatt.github.io/autocv/reference/create_rprofile.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a default .Rprofile to a new project directory. — create_rprofile","title":"Write a default .Rprofile to a new project directory. — create_rprofile","text":"Write default .Rprofile new project directory.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/create_rprofile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a default .Rprofile to a new project directory. — create_rprofile","text":"","code":"create_rprofile(root_path = here::here())"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/create_rproject.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a default .Rproject file to a new project directory and open. — create_rproject","title":"Write a default .Rproject file to a new project directory and open. — create_rproject","text":"Write default .Rproject file new project directory open.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/create_rproject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a default .Rproject file to a new project directory and open. — create_rproject","text":"","code":"create_rproject(root_path, project_name)"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/create_rproject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a default .Rproject file to a new project directory and open. — create_rproject","text":"","code":"create_rproject(root_path = tempdir(), project_name = \"test_project\") #> ✔ Writing file: test_project.Rproj"},{"path":"https://bainmatt.github.io/autocv/reference/download_webpage_txt.html","id":null,"dir":"Reference","previous_headings":"","what":"Save the text from a webpage url. — download_webpage_txt","title":"Save the text from a webpage url. — download_webpage_txt","text":"download_webpage_txt saves output .txt file. download_webpage_pdf saves output .pdf file.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/download_webpage_txt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save the text from a webpage url. — download_webpage_txt","text":"","code":"download_webpage_txt(   url,   output_filepath = NA,   output_dir = \"input\",   output_filename = \"posting.txt\",   base_dir = \".\" )  download_webpage_pdf(   url,   output_filepath = NA,   output_dir = \"input\",   output_filename = \"posting.pdf\" )"},{"path":"https://bainmatt.github.io/autocv/reference/download_webpage_txt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save the text from a webpage url. — download_webpage_txt","text":"url web address job posting. output_file desired output filepath.","code":""},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/download_webpage_txt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save the text from a webpage url. — download_webpage_txt","text":"","code":"library(rvest, warn.conflicts = FALSE) url <- \"https://en.wikipedia.org/wiki/R_(programming_language)\" fil <- tempfile(\"file\", tempdir(), fileext = \".txt\") download_webpage_txt(url, fil) #> ✔ Writing file: ../../../../../../../tmp/RtmpbseB65/file9b603df1895b.txt readLines(fil, n = 1) #> [1] \"R (programming language) - Wikipedia(function(){var className=\\\"client-js vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-sticky-header-disabled vector-feature-page-tools-pinned-disabled vector-feature-toc-pinned-clientpref-1 vector-feature-main-menu-pinned-disabled vector-feature-limited-width-clientpref-1 vector-feature-limited-width-content-enabled vector-feature-custom-font-size-clientpref-1 vector-feature-appearance-pinned-clientpref-1 vector-feature-night-mode-enabled skin-theme-clientpref-day vector-toc-available\\\";var cookie=document.cookie.match(/(?:^|; )enwikimwclientpreferences=([^;]+)/);if(cookie){cookie[1].split('%2C').forEach(function(pref){className=className.replace(new RegExp('(^| )'+pref.replace(/-clientpref-\\\\w+$|[^\\\\w-]+/g,'')+'-clientpref-\\\\\\\\w+( |$)'),'$1'+pref+'$2');});}document.documentElement.className=className;}());RLCONF={\\\"wgBreakFrames\\\":false,\\\"wgSeparatorTransformTable\\\":[\\\"\\\",\\\"\\\"],\\\"wgDigitTransformTable\\\":[\\\"\\\",\\\"\\\"],\\\"wgDefaultDateFormat\\\":\\\"dmy\\\",\"  unlink(fil)  url <- \"https://stat.ethz.ch/R-manual/R-devel/library/utils/html/download.file.html\" fil <- tempfile(\"file\", tempdir(), fileext = \".pdf\") download_webpage_pdf(url, fil) unlink(fil)"},{"path":"https://bainmatt.github.io/autocv/reference/example_contact_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample contact data — example_contact_data","title":"Sample contact data — example_contact_data","text":"synthetic dataset containing personal contact information associated links, including home address, email, personal websites. details, refer corresponding template spreadsheet repository.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/example_contact_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample contact data — example_contact_data","text":"","code":"example_contact_data"},{"path":"https://bainmatt.github.io/autocv/reference/example_contact_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample contact data — example_contact_data","text":"data frame 9 rows 5 columns: loc Name contact info field (character). order Ordinal position display item resume (positive integer). icon Name Font Awesome icon display next item; optional (character). address_text Text display item, place address, provided (see ) (character). address Link path website, web address, file redirected corresponding address_text clicked; optional (character).","code":""},{"path":"https://bainmatt.github.io/autocv/reference/example_contact_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sample contact data — example_contact_data","text":"Generated demonstration purposes.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/example_contact_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample contact data — example_contact_data","text":"","code":"data(example_contact_data) head(example_contact_data) #> # A tibble: 6 × 5 #>   loc      order icon           address_text        address                    #>   <chr>    <dbl> <chr>          <chr>               <chr>                      #> 1 name         0 NA             My Name             NA                         #> 2 title       NA NA             PhD                 NA                         #> 3 pic         NA NA             My Name             /absolute/path/to/pic.png  #> 4 location     1 map-marked-alt City, ST            NA                         #> 5 email        2 envelope       myemail@outlook.com mailto:myemail@outlook.com #> 6 phone        3 phone          (999) 999-9999      tel:+19999999999"},{"path":"https://bainmatt.github.io/autocv/reference/example_job_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample job metadata — example_job_metadata","title":"Sample job metadata — example_job_metadata","text":"synthetic dataset containing information hypothetical job. details, refer corresponding template file repository.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/example_job_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample job metadata — example_job_metadata","text":"","code":"example_job_metadata"},{"path":"https://bainmatt.github.io/autocv/reference/example_job_metadata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample job metadata — example_job_metadata","text":"named list 11 fields: name name (character). period Name current job application period, chosen user creating first application period; must valid directory name (character). id Unique identifier (relative identifiers current period) associate current application (character). base_id Identifier corresponding existing job application upon base current application. provided, template data files current application directory copied base_id directory rather autocv template directory; must existing id current period; optional (character). company Name company applying (character). position Name position applying (character). portal_url URL job application portal; optional (character). posting_url URL job posting page (character). linkedin_url URL LinkedIn posting job application; optional (character). recruiter_email Email recruiter job; optional (character). notes notes include log current job application; optional (character).","code":""},{"path":"https://bainmatt.github.io/autocv/reference/example_job_metadata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sample job metadata — example_job_metadata","text":"Generated demonstration purposes.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/example_job_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample job metadata — example_job_metadata","text":"","code":"data(example_job_metadata) head(example_job_metadata) #> $name #> [1] \"Your Name\" #>  #> $period #> [1] \"2024-07-data-science\" #>  #> $id #> [1] \"AB\" #>  #> $base_id #> [1] \"/\" #>  #> $company #> [1] \"Company Name\" #>  #> $position #> [1] \"Data Scientist\" #>"},{"path":"https://bainmatt.github.io/autocv/reference/example_position_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample position data — example_position_data","title":"Sample position data — example_position_data","text":"synthetic dataset containing information previous current professional roles experiences, including work, education, certifications, projects, publications. details, refer corresponding template spreadsheet repository.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/example_position_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample position data — example_position_data","text":"","code":"example_position_data"},{"path":"https://bainmatt.github.io/autocv/reference/example_position_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample position data — example_position_data","text":"data frame 11 rows 35 columns: section Name section entry appear resume (character). title Name title role, experience, project (character). in_base Flag indicating whether entry included base resume, either \"x\" NA (character). include Flag indicating whether entry included tailored resume, either \"x\" NA (character). institution Name institution associated role experience (character). loc Name location associated role experience (character). start Start date (YYYY-MM-DD) role experience; set 1900-01-01 (origin) indicate provided end date (see ) target (rendered \"Expected - end\" (date). end End date (YYYY-MM-DD) role experience; set NA indicate role ongoing (rendered \"start - Present\") (date). link Web address display next position name; optional (character). link_text (clickable) text display place web address, link supplied (character). short_summary Concise summary role experience associated responsibilities, intended use professional profile LinkedIn (character). description_i Bullet point include entry, can integer 1 5 representing bullet's ordering (character). skill_ix_iy Name (comma-separated) skill include parentheses next bullet point ix, order given iy, ix iy can integer 1 5 (character). tool_1, tool_2, tool_3 Name tool technology required role experience, intended use professional profile LinkedIn (character). competency_1, competency_2, competency_3 Name skill (tool technology) required role experience, intended use professional profile LinkedIn (character).","code":""},{"path":"https://bainmatt.github.io/autocv/reference/example_position_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sample position data — example_position_data","text":"Generated demonstration purposes.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/example_position_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample position data — example_position_data","text":"","code":"data(example_position_data) head(example_position_data) #> # A tibble: 6 × 35 #>   section        title     in_base include institution loc   start               #>   <chr>          <chr>     <chr>   <chr>   <chr>       <chr> <dttm>              #> 1 certifications Certific… x       x       Institutio… Loca… 1900-01-01 00:00:00 #> 2 certifications Certific… x       x       Institutio… Loca… 1900-01-01 00:00:00 #> 3 education      PhD, Deg… x       x       University… City… 2021-09-01 00:00:00 #> 4 education      BSc, Deg… x       x       University… City… 2014-09-01 00:00:00 #> 5 education      MSc, Deg… x       x       University… City… 2018-09-01 00:00:00 #> 6 projects       pkgname   x       x       NA          NA    2024-01-01 00:00:00 #> # ℹ 28 more variables: end <dttm>, link <chr>, link_text <chr>, #> #   short_summary <chr>, description_1 <chr>, description_2 <chr>, #> #   description_3 <chr>, description_4 <chr>, description_5 <lgl>, #> #   skill_1_1 <chr>, skill_1_2 <chr>, skill_1_3 <chr>, skill_1_4 <chr>, #> #   skill_1_5 <lgl>, skill_2_1 <lgl>, skill_2_2 <lgl>, skill_3_1 <lgl>, #> #   skill_3_2 <lgl>, skill_4_1 <lgl>, skill_4_2 <lgl>, skill_5_1 <lgl>, #> #   skill_5_2 <lgl>, tool_1 <lgl>, tool_2 <lgl>, tool_3 <lgl>, …"},{"path":"https://bainmatt.github.io/autocv/reference/example_posting.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample job posting — example_posting","title":"Sample job posting — example_posting","text":"hypothetical job posting.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/example_posting.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample job posting — example_posting","text":"","code":"example_posting"},{"path":"https://bainmatt.github.io/autocv/reference/example_posting.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample job posting — example_posting","text":"character vector length 1","code":""},{"path":"https://bainmatt.github.io/autocv/reference/example_posting.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sample job posting — example_posting","text":"Generated demonstration purposes.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/example_posting.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample job posting — example_posting","text":"","code":"data(example_posting) head(example_posting) #> [1] \"Data Scientist, Management: People Analytics\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            #> [2] \"\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        #> [3] \"At autocv, our mission is to improve peoples lives with the worlds best transportation. To do this, we start with our own community by creating an open, inclusive, and diverse organization. As a Data Scientist on the Driving XP team, you will collaborate with our world class team of engineers, product managers, and designers to design the end to end driving experience for hundreds of thousands of drivers who interact deeply with our app every day. This includes building tools to set personal driving preferences, guidance on when and where to drive, and designing the best UI and personalized XP to get the right rides to the right drivers quickly. Data Science is at the heart of autocvs products and decision-making. You will leverage data and rigorous, analytical thinking to shape our Driving XP products and make business decisions that put drivers first. This will involve identifying and scoping opportunities, shaping priorities, recommending technical solutions, designing experiments, and measuring the impact of new features. Responsibilities: Leverage data and analytic frameworks to identify opportunities for growth and efficiency Partner with product managers, engineers, marketers, designers, and operators to translate data insights into decisions and actionDesign and analyze online experiments; communicate results and act on launch decisionsDevelop analytical frameworks to monitor business and product performance Establish metrics that measure the health of our products, as well as rider and driver experience Experience: Degree in a quantitative field such as statistics, economics, applied math, operations research or engineering (advanced degrees preferred), or relevant work experience (3+ years of industry experience in a data science or analytical role) Proficiency in SQL (able to write structured and efficient queries on large data sets) Experience in programming, especially with data science and visualization libraries in Python or R Experience in online experimentation and statistical analysis Strong oral and written communication skills, and ability to collaborate with and influence cross-functional partners Benefits: Extended health and dental coverage options, along with life insurance and disability benefits Mental health benefits Family building benefits Access to a Health Care Savings Account In addition to provincial observed holidays, team members get 15 days paid time off, with an additional day for each year of service 4 Floating Holidays each calendar year prorated based off of date of hire 10 paid sick days per year regardless of province 18 weeks of paid parental leave. Biological, adoptive, and foster parents are all eligible autocv proudly pursues and hires a diverse workforce. This role will be in-office on a hybrid schedule. Team Members will be expected to work in the office 3 days per week. Additionally, hybrid roles have the flexibility to work from anywhere for up to 4 weeks per year.\""},{"path":"https://bainmatt.github.io/autocv/reference/example_skill_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample skill data — example_skill_data","title":"Sample skill data — example_skill_data","text":"synthetic dataset containing information job-relevant skills, including skill ratings inclusion/exclusion flags. details, refer corresponding template spreadsheet repository.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/example_skill_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample skill data — example_skill_data","text":"","code":"example_skill_data"},{"path":"https://bainmatt.github.io/autocv/reference/example_skill_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample skill data — example_skill_data","text":"data frame 113 rows 14 columns: category Name category classify skill (character). skill Name skill (character). in_base Flag indicating whether skill included skills section base resume, either \"x\" NA (character). include Flag indicating whether skill included skills section tailored resume, either \"x\" NA (character). level Level proficiency, 0-5 (float). core_tools Flag indicating whether skill included \"Core tools\" section CV, either \"x\" NA (character). current_tech Flag indicating whether skill included \"Current tech\" section CV, either \"x\" NA (character). key_competency Flag indicating whether skill included \"Key competencies\" section CV, either \"x\" NA (character). in_stack Flag indicating whether skill tech stack, assuming skill tools technology, either \"x\" NA (character). is_a_tool Flag indicating whether skill tool technology, either \"x\" NA (character). in_resume Logical value indicating whether skill mentioned body text resume; auto-populated (logical). in_profile Logical value indicating whether skill mentioned skills section abridged resume; auto-populated (logical). category_id Number representing chronological position resume skills section category skill belongs; auto-populated (positive integer). alias Name alias given category skill belongs; auto-populated (character).","code":""},{"path":"https://bainmatt.github.io/autocv/reference/example_skill_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sample skill data — example_skill_data","text":"Generated demonstration purposes.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/example_skill_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample skill data — example_skill_data","text":"","code":"data(example_skill_data) head(example_skill_data) #> # A tibble: 6 × 14 #>   category    skill in_base include level core_tools current_tech key_competency #>   <chr>       <chr> <chr>   <chr>   <dbl> <chr>      <chr>        <chr>          #> 1 Programmin… R     x       x        3.5  x          NA           NA             #> 2 Programmin… SQL   x       x        3    x          NA           NA             #> 3 Programmin… Pyth… x       x        4.25 x          NA           NA             #> 4 Programmin… MATL… NA      NA       4.5  NA         NA           NA             #> 5 Programmin… Bash  NA      NA       3    NA         NA           NA             #> 6 Data Manip… Beau… NA      NA       3    NA         NA           NA             #> # ℹ 6 more variables: in_stack <chr>, is_a_tool <chr>, in_resume <lgl>, #> #   in_profile <lgl>, category_id <dbl>, alias <chr>"},{"path":"https://bainmatt.github.io/autocv/reference/example_text_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample text data — example_text_data","title":"Sample text data — example_text_data","text":"synthetic dataset containing textual building blocks job application components resume bio cover letter. details, refer corresponding template spreadsheet repository.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/example_text_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample text data — example_text_data","text":"","code":"example_text_data"},{"path":"https://bainmatt.github.io/autocv/reference/example_text_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample text data — example_text_data","text":"data frame 32 rows 7 columns: loc Name text block (character). include Flag indicating whether item included tailored resume, either \"x\" NA (character). text actual text display item (character). order Ordinal position display item application documents (positive integer). word_limit Limit impose number words text block (positive integer). word_count Computed number words text block; auto-populated (positive integer).","code":""},{"path":"https://bainmatt.github.io/autocv/reference/example_text_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sample text data — example_text_data","text":"Generated demonstration purposes.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/example_text_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample text data — example_text_data","text":"","code":"data(example_text_data) head(example_text_data) #> # A tibble: 6 × 7 #>   loc            include text       order word_limit word_count `notes/outtakes` #>   <chr>          <chr>   <chr>      <dbl>      <dbl>      <dbl> <chr>            #> 1 title          x       My Title      NA         15          2 NA               #> 2 bio_experience x       This is m…     1         15          5 NA               #> 3 bio_expertise  NA      This is m…     2         15          5 NA               #> 4 bio_value      x       This is m…     3         15          5 NA               #> 5 bio_objective  NA      This is m…     4         15          5 NA               #> 6 bio_experience NA      /              1         15          1 NA"},{"path":"https://bainmatt.github.io/autocv/reference/find_matches_and_positions.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the number and position of terms matching a given term in a given text. — find_matches_and_positions","title":"Find the number and position of terms matching a given term in a given text. — find_matches_and_positions","text":"Find number position terms matching given term given text.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/find_matches_and_positions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the number and position of terms matching a given term in a given text. — find_matches_and_positions","text":"","code":"find_matches_and_positions(term, text, ignore.case = TRUE)"},{"path":"https://bainmatt.github.io/autocv/reference/find_matches_and_positions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the number and position of terms matching a given term in a given text. — find_matches_and_positions","text":"term string representing term matched. text string representing text check matches.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/find_matches_and_positions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the number and position of terms matching a given term in a given text. — find_matches_and_positions","text":"named list following elements: count Integer, number matches. first_ix Integer, position first match.","code":""},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/find_matches_and_positions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the number and position of terms matching a given term in a given text. — find_matches_and_positions","text":"","code":"text <- \"This is a sample text with several sample words.\" term <- \"sample\" find_matches_and_positions(term = term, text = text) #> $count #> [1] 2 #>  #> $positions #> [1] 11 36 #>"},{"path":"https://bainmatt.github.io/autocv/reference/format_action.html","id":null,"dir":"Reference","previous_headings":"","what":"Format any 'action' text provided to a cli alert before printing. — format_action","title":"Format any 'action' text provided to a cli alert before printing. — format_action","text":"Format 'action' text provided cli alert printing.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/format_action.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format any 'action' text provided to a cli alert before printing. — format_action","text":"","code":"format_action(action)"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/get_app_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Access application metadata. — get_app_info","title":"Access application metadata. — get_app_info","text":"get_app_info retrieves requested info given application log. get_status_report returns table proportions status. get_app_path_to returns abs path doc given application.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/get_app_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access application metadata. — get_app_info","text":"","code":"get_app_info(   id = c(\"all\", \"latest\"),   field = \"all\",   status = c(\"all\", \"ipr\", \"applied\", \"interviewed\", \"rejected\",     \"interviewed_then_rejected\"),   app_period = \"latest\",   app_dir = \"applications\" )  get_status_report(app_period = \"latest\")  get_app_path_to(id = \"latest\", doc = \"resume\", app_period = \"latest\")"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/get_latest_entry.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain the latest entry in an application log. — get_latest_entry","title":"Obtain the latest entry in an application log. — get_latest_entry","text":"Obtain latest entry application log.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/get_latest_entry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain the latest entry in an application log. — get_latest_entry","text":"","code":"get_latest_entry(log = load_log())"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/get_path_to.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct an absolute path to a project directory for saving and loading. — get_path_to","title":"Construct an absolute path to a project directory for saving and loading. — get_path_to","text":"function constructs absolute path specified project directory. Directory paths, relative project root, defined user's .Rprofile environment variables.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/get_path_to.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct an absolute path to a project directory for saving and loading. — get_path_to","text":"","code":"get_path_to(   dir = c(\"src\", \"input\", \"output\", \"applications\", \"notebooks\", \"templates\", \"css\",     \"latex\", \"resources\") )"},{"path":"https://bainmatt.github.io/autocv/reference/get_path_to.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct an absolute path to a project directory for saving and loading. — get_path_to","text":"dir (string) directory name.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/get_path_to.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct an absolute path to a project directory for saving and loading. — get_path_to","text":"","code":"get_path_to(\"src\") #> [1] \"/home/runner/work/autocv/autocv/./R\" get_path_to(\"templates\") #> [1] \"/home/runner/.cache/R/renv/library/autocv-e7350c3b/linux-ubuntu-jammy/R-4.4/x86_64-pc-linux-gnu/autocv/templates\""},{"path":"https://bainmatt.github.io/autocv/reference/get_valid_opts.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain a set of valid options for indexing a job log by a given argument. — get_valid_opts","title":"Obtain a set of valid options for indexing a job log by a given argument. — get_valid_opts","text":"Obtain set valid options indexing job log given argument.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/get_valid_opts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain a set of valid options for indexing a job log by a given argument. — get_valid_opts","text":"","code":"get_valid_opts(log = load_log(), arg = c(\"id\", \"field\", \"doc\"))"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/in_tmp_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Establish a temporary working tree for testing app-building functionality. — in_tmp_env","title":"Establish a temporary working tree for testing app-building functionality. — in_tmp_env","text":"function creates temporary autocv project directory working tree mirroring user's, defined .Rprofile file. temporary directory serves environment testing following application-building functionality: building applications rendering applications accessing application logs running application keyword checks","code":""},{"path":"https://bainmatt.github.io/autocv/reference/in_tmp_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Establish a temporary working tree for testing app-building functionality. — in_tmp_env","text":"","code":"in_tmp_env(expr)"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/in_tmp_env.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Establish a temporary working tree for testing app-building functionality. — in_tmp_env","text":"","code":"# Set temporary path environment variables ---------------------------------- in_tmp_env(message(\"Temporary root directory: \", Sys.getenv(\"ROOT\"))) #> Temporary root directory: /tmp/RtmpbseB65 message(\"Reset root directory: \", Sys.getenv(\"ROOT\")) #> Reset root directory: /home/runner/work/autocv/autocv  in_tmp_env(message(\"Temporary templates loc: \", get_path_to(\"templates\"))) #> Temporary templates loc: /home/runner/.cache/R/renv/library/autocv-e7350c3b/linux-ubuntu-jammy/R-4.4/x86_64-pc-linux-gnu/autocv/templates message(\"Reset templates loc: \", get_path_to(\"templates\")) #> Reset templates loc: /home/runner/.cache/R/renv/library/autocv-e7350c3b/linux-ubuntu-jammy/R-4.4/x86_64-pc-linux-gnu/autocv/templates  # Wrap multi-line expressions ----------------------------------------------- in_tmp_env({   x <- c(1, 2, 3)   for (i in x) {     print(i)   } }) #> [1] 1 #> [1] 2 #> [1] 3  # Handle input/output operations in the temporary environment --------------- in_tmp_env({   tmpdir <- get_path_to(\"input\")   if (!dir.exists(tmpdir)) {      dir.create(tmpdir, recursive = TRUE)    }      fil <- file.path(tmpdir, \"test.txt\")   con <- file(fil, open = \"w\")   writeLines(\"this is a test\", con = con)   close(con)      cat(paste0(\"In \", cli::col_blue(fil), \":\\n\", readLines(fil))) }) #> In /tmp/RtmpbseB65/./R/input/test.txt: #> this is a test"},{"path":"https://bainmatt.github.io/autocv/reference/load_application_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Load application data. — load_application_data","title":"Load application data. — load_application_data","text":"Load application data.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/load_application_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load application data. — load_application_data","text":"","code":"load_application_data(   target = c(\"app\", \"base\"),   filename = c(\"resume_data.xlsx\", \"cover_data.xlsx\"),   sheet = c(\"entries\", \"skills\", \"contact_info\", \"text_blocks\"),   data_dir = \"input\",   app_id = \"latest\",   app_period = \"latest\" )"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/load_job_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Read user-defined metadata for the present job. — load_job_info","title":"Read user-defined metadata for the present job. — load_job_info","text":"Read user-defined metadata present job.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/load_job_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read user-defined metadata for the present job. — load_job_info","text":"","code":"load_job_info(   field = \"all\",   filename = \"job_metadata.yml\",   dir = \"input\",   open = FALSE )"},{"path":"https://bainmatt.github.io/autocv/reference/load_job_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read user-defined metadata for the present job. — load_job_info","text":"nested named list strings user-specified job details.","code":""},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/load_job_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read user-defined metadata for the present job. — load_job_info","text":"","code":"load_job_info(filename = \"template_job_metadata.yml\", dir = \"templates\") #> $name #> [1] \"Your Name\" #>  #> $period #> [1] \"2024-07-data-science\" #>  #> $id #> [1] \"AB\" #>  #> $base_id #> [1] \"/\" #>  #> $company #> [1] \"Company Name\" #>  #> $position #> [1] \"Data Scientist\" #>  #> $portal_url #> [1] \"/\" #>  #> $posting_url #> [1] \"https://en.wikipedia.org/wiki/Data_science\" #>  #> $linkedin_url #> [1] \"/\" #>  #> $recruiter_email #> [1] \"/\" #>  #> $notes #> [1] \"/\" #>"},{"path":"https://bainmatt.github.io/autocv/reference/load_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Load the log for a given application period. — load_log","title":"Load the log for a given application period. — load_log","text":"Load log given application period.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/load_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load the log for a given application period. — load_log","text":"","code":"load_log(app_period = \"latest\", app_dir = \"applications\")"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/load_log.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load the log for a given application period. — load_log","text":"","code":"#"},{"path":"https://bainmatt.github.io/autocv/reference/make_markdown_contacts.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare individual entry in contact info card. — make_markdown_contacts","title":"Prepare individual entry in contact info card. — make_markdown_contacts","text":"make_markdown_contacts prepares individual markdown entry. make_latex_contacts prepares individual LaTeX entry. make_txt_contacts prepares individual plain text entry.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/make_markdown_contacts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare individual entry in contact info card. — make_markdown_contacts","text":"","code":"make_markdown_contacts(contact_data)  make_latex_contacts(contact_data, macro)  make_txt_contacts(contact_data)"},{"path":"https://bainmatt.github.io/autocv/reference/make_markdown_contacts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare individual entry in contact info card. — make_markdown_contacts","text":"contact_data data frame containing contact data. macro desired LaTeX macro use rendering hyperlinks.","code":""},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/omit_hidden_fields.html","id":null,"dir":"Reference","previous_headings":"","what":"Omit spreadsheet entries beginning with a preset prefix. — omit_hidden_fields","title":"Omit spreadsheet entries beginning with a preset prefix. — omit_hidden_fields","text":"Omit spreadsheet entries beginning preset prefix.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/omit_hidden_fields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Omit spreadsheet entries beginning with a preset prefix. — omit_hidden_fields","text":"","code":"omit_hidden_fields(data, style = \"markdown\", prefix = \"/\")"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/open_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Open, edit, and remove application documents. — open_app","title":"Open, edit, and remove application documents. — open_app","text":"open_app opens documents (resume, default) given application. edit_app opens spreadsheet data files given application editing. edit_base opens base spreadsheet data files editing. delete_app deletes application folder log entry given id.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/open_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open, edit, and remove application documents. — open_app","text":"","code":"open_app(doc = \"resume\", id = \"latest\", app_period = \"latest\")  edit_app(id = \"latest\", app_period = \"latest\")  edit_base()  delete_app(app_id, log = load_log())"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/open_doc_and_wait.html","id":null,"dir":"Reference","previous_headings":"","what":"Open an application document and pause execution until a key is entered. — open_doc_and_wait","title":"Open an application document and pause execution until a key is entered. — open_doc_and_wait","text":"Open application document pause execution key entered.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/open_doc_and_wait.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open an application document and pause execution until a key is entered. — open_doc_and_wait","text":"","code":"open_doc_and_wait(path, base_dir = \".\", prompt = \"Enter y to continue: \")"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/prep_term_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare raw strings and entries in a keyword list for analysis. — prep_term_list","title":"Prepare raw strings and entries in a keyword list for analysis. — prep_term_list","text":"Strip markdown characters, trailing whitespace, blank lines, unique lines supplied term list.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/prep_term_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare raw strings and entries in a keyword list for analysis. — prep_term_list","text":"","code":"prep_term_list(terms)"},{"path":"https://bainmatt.github.io/autocv/reference/prep_term_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare raw strings and entries in a keyword list for analysis. — prep_term_list","text":"terms character vector containing keywords.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/prep_term_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare raw strings and entries in a keyword list for analysis. — prep_term_list","text":"character vector containing unique, processed keywords.","code":""},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/prep_term_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare raw strings and entries in a keyword list for analysis. — prep_term_list","text":"","code":"terms <- c(\"### ML\", \"\", \"#### Supervised Learning\", \"SVMs\", \"ML\") print(terms) #> [1] \"### ML\"                   \"\"                         #> [3] \"#### Supervised Learning\" \"SVMs\"                     #> [5] \"ML\"                        processed_terms <- prep_term_list(terms) print(processed_terms) #> [1] \"ML\"                  \"Supervised Learning\" \"SVMs\""},{"path":"https://bainmatt.github.io/autocv/reference/prepare_bio.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare bio. — prepare_bio","title":"Prepare bio. — prepare_bio","text":"Prepare bio.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/prepare_bio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare bio. — prepare_bio","text":"","code":"prepare_bio(text_data, use_abridged = FALSE)"},{"path":"https://bainmatt.github.io/autocv/reference/prepare_bio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare bio. — prepare_bio","text":"text_data spreadsheet containing resume text data.","code":""},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/prepare_description_bullets.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare entry descriptions. — prepare_description_bullets","title":"Prepare entry descriptions. — prepare_description_bullets","text":"Prepare entry descriptions.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/prepare_description_bullets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare entry descriptions. — prepare_description_bullets","text":"","code":"prepare_description_bullets(   data,   bullet_style = c(\"-\", \"+\"),   use_abridged = FALSE )"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/prepare_links.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare properly formatted links with custom text. — prepare_links","title":"Prepare properly formatted links with custom text. — prepare_links","text":"Prepare properly formatted links custom text.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/prepare_links.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare properly formatted links with custom text. — prepare_links","text":"","code":"prepare_links(   data,   style = c(\"markdown\", \"latex\", \"txt\"),   macro = c(\"myhref\", \"href\", NA) )"},{"path":"https://bainmatt.github.io/autocv/reference/prepare_links.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare properly formatted links with custom text. — prepare_links","text":"style style link, either \"markdown\", \"latex\", \"txt\" (plain) macro macro use \"latex\" references","code":""},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/prepare_timeline.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare dates. — prepare_timeline","title":"Prepare dates. — prepare_timeline","text":"Prepare dates.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/prepare_timeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare dates. — prepare_timeline","text":"","code":"prepare_timeline(   data,   order = c(\"chronological\", \"reversed\"),   style = c(\"markdown\", \"latex\", \"txt\") )"},{"path":"https://bainmatt.github.io/autocv/reference/prepare_timeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare dates. — prepare_timeline","text":"data spreadsheet containing position data.","code":""},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/preprocess_contacts.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare contact info card. — preprocess_contacts","title":"Prepare contact info card. — preprocess_contacts","text":"Prepare contact info card.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/preprocess_contacts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare contact info card. — preprocess_contacts","text":"","code":"preprocess_contacts(   contact_data,   style = c(\"markdown\", \"latex\", \"txt\"),   macro = c(\"myhref\", \"href\", NA) )"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/preprocess_entries.html","id":null,"dir":"Reference","previous_headings":"","what":"Run each resume data pre-processing step in sequence. — preprocess_entries","title":"Run each resume data pre-processing step in sequence. — preprocess_entries","text":"Run resume data pre-processing step sequence.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/preprocess_entries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run each resume data pre-processing step in sequence. — preprocess_entries","text":"","code":"preprocess_entries(   entry_data,   style = c(\"markdown\", \"latex\", \"txt\"),   order = c(\"chronological\", \"reversed\"),   bullet_style = c(\"-\", \"+\"),   use_abridged = FALSE,   sort_appended = FALSE,   skill_set_sorted = NULL )"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/preprocess_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare text blocks. — preprocess_text","title":"Prepare text blocks. — preprocess_text","text":"Prepare text blocks.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/preprocess_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare text blocks. — preprocess_text","text":"","code":"preprocess_text(   text_data,   style = c(\"markdown\", \"latex\", \"txt\"),   use_abridged = FALSE )"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/print_achievements.html","id":null,"dir":"Reference","previous_headings":"","what":"Print the achievements listed in a text dataframe as bullet points. — print_achievements","title":"Print the achievements listed in a text dataframe as bullet points. — print_achievements","text":"Print achievements listed text dataframe bullet points.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/print_achievements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print the achievements listed in a text dataframe as bullet points. — print_achievements","text":"","code":"print_achievements(text_data, bullet_style = c(\"-\", \"+\"))"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/print_contact_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Print contact info. — print_contact_info","title":"Print contact info. — print_contact_info","text":"Print contact info.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/print_contact_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print contact info. — print_contact_info","text":"","code":"print_contact_info(   contact_data,   section = c(\"info\", \"links\", \"both\", \"signoff\"),   sep = c(\" | \", \"\\n\") )"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/print_cover_body.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a cover letter from a text dataframe in a plain text or LaTeX style. — print_cover_body","title":"Print a cover letter from a text dataframe in a plain text or LaTeX style. — print_cover_body","text":"Print cover letter text dataframe plain text LaTeX style.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/print_cover_body.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a cover letter from a text dataframe in a plain text or LaTeX style. — print_cover_body","text":"","code":"print_cover_body(   text_data,   position,   company,   name = NULL,   style = c(\"latex\", \"txt\"),   use_bullets = FALSE,   bullet_style = c(\"-\", \"+\"),   type = c(\"cover\", \"email\") )"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/print_cover_plain.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare and print each section of a plain text cover letter. — print_cover_plain","title":"Prepare and print each section of a plain text cover letter. — print_cover_plain","text":"Prepare print section plain text cover letter.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/print_cover_plain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare and print each section of a plain text cover letter. — print_cover_plain","text":"","code":"print_cover_plain(   position,   company,   app_id = \"latest\",   app_period = \"latest\",   use_bullets = FALSE,   bullet_style = c(\"-\", \"+\"),   type = c(\"cover\", \"email\") )"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/print_latex_section.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a section from a position dataframe to LaTeX. — print_latex_section","title":"Print a section from a position dataframe to LaTeX. — print_latex_section","text":"Print section position dataframe LaTeX.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/print_latex_section.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a section from a position dataframe to LaTeX. — print_latex_section","text":"","code":"print_latex_section(   position_data,   section_id = c(\"work\", \"education\", \"certifications\", \"projects\", \"writing\",     \"publications\", \"volunteering\", \"additional_info\"),   short_entries = FALSE,   target = c(\"app\", \"base\"),   padding = 1 )"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/print_resume_plain.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare and print each section of a plain text resume. — print_resume_plain","title":"Prepare and print each section of a plain text resume. — print_resume_plain","text":"Prepare print section plain text resume.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/print_resume_plain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare and print each section of a plain text resume. — print_resume_plain","text":"","code":"print_resume_plain(   target = c(\"app\", \"base\"),   app_id = \"latest\",   app_period = \"latest\",   use_abridged = FALSE,   sort_appended = FALSE )"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/print_section.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a section from a position dataframe to markdown. — print_section","title":"Print a section from a position dataframe to markdown. — print_section","text":"Print section position dataframe markdown.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/print_section.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a section from a position dataframe to markdown. — print_section","text":"","code":"print_section(   position_data,   section_id = c(\"work\", \"education\", \"certifications\", \"projects\", \"writing\",     \"publications\", \"volunteering\", \"additional_info\"),   target = c(\"base\", \"app\") )"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/print_txt_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a formatted plain text resume header. — print_txt_header","title":"Print a formatted plain text resume header. — print_txt_header","text":"Print formatted plain text resume header.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/print_txt_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a formatted plain text resume header. — print_txt_header","text":"","code":"print_txt_header(header)"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/print_txt_header.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print a formatted plain text resume header. — print_txt_header","text":"","code":"print_txt_header(\"this is my header\") #>  #>  #>  #> THIS IS MY HEADER #>  #> ================= #>  #>"},{"path":"https://bainmatt.github.io/autocv/reference/print_txt_section.html","id":null,"dir":"Reference","previous_headings":"","what":"Print sections of a plain text resume. — print_txt_section","title":"Print sections of a plain text resume. — print_txt_section","text":"Print sections plain text resume.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/print_txt_section.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print sections of a plain text resume. — print_txt_section","text":"","code":"print_txt_section(   position_data,   section_id = c(\"work\", \"education\", \"certifications\", \"projects\", \"writing\",     \"publications\", \"volunteering\", \"additional_info\"),   target = c(\"app\", \"base\") )"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/render_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Run each resume/CV rendering option in sequence. — render_app","title":"Run each resume/CV rendering option in sequence. — render_app","text":"render_app builds pdf plain text resume given application. render_base builds html CV, pdf plain text resume base data. render_linkedin builds short resume suitable professional profiles.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/render_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run each resume/CV rendering option in sequence. — render_app","text":"","code":"render_app(   app_id = \"latest\",   app_period = \"latest\",   cover = TRUE,   email = TRUE,   use_bullets = TRUE )  render_base(report_counts = TRUE)  render_linkedin(report_counts = TRUE)"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/render_cover.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a cover letter based on spreadsheet data. — render_cover","title":"Construct a cover letter based on spreadsheet data. — render_cover","text":"render_cover constructs formal, LaTeX-style resume. render_cover_plain constructs plain text cover letter simplicity.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/render_cover.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a cover letter based on spreadsheet data. — render_cover","text":"","code":"render_cover(   app_id = \"latest\",   app_period = \"latest\",   use_bullets = TRUE,   bullet_style = c(\"-\", \"+\"),   stylesheets = list(\"custom_cover.tex\"),   input_filename = \"cover.Rmd\",   output_basename = \"cover\",   app_dir = \"applications\",   input_dir = \"notebooks\",   data_dir = \"input\",   output_dir = \"output\" )  render_cover_plain(   app_id = \"latest\",   app_period = \"latest\",   use_bullets = TRUE,   bullet_style = c(\"-\", \"+\"),   type = c(\"cover\", \"email\"),   app_dir = \"applications\",   data_dir = \"input\",   output_dir = \"output\" )"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/render_cv_as_html.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a curriculum vitae based on spreadsheet data. — render_cv_as_html","title":"Construct a curriculum vitae based on spreadsheet data. — render_cv_as_html","text":"render_cv_as_html constructs informal HTML-format resume. render_cv_as_pdf converts HTML-format resume PDF.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/render_cv_as_html.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a curriculum vitae based on spreadsheet data. — render_cv_as_html","text":"","code":"render_cv_as_html(   input_filename = \"cv.Rmd\",   output_basename = \"cv\",   input_dir = \"notebooks\",   data_dir = \"input\",   output_dir = \"output\",   stylesheets = list(\"custom_resume.css\", \"styles_html.css\"),   sort_appended = FALSE,   show = FALSE )  render_cv_as_pdf(   input_filename = \"cv.Rmd\",   output_basename = \"cv\",   input_dir = \"notebooks\",   data_dir = \"input\",   output_dir = \"output\",   stylesheets = list(\"custom_resume.css\", \"styles_pdf.css\"),   sort_appended = FALSE )"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/render_resume.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a resume based on spreadsheet data. — render_resume","title":"Construct a resume based on spreadsheet data. — render_resume","text":"render_resume constructs formal, ATS-compatible, LaTeX-style resume.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/render_resume.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a resume based on spreadsheet data. — render_resume","text":"","code":"render_resume(   target = c(\"app\", \"base\"),   app_id = \"latest\",   app_period = \"latest\",   stylesheets = list(\"custom_resume.tex\"),   input_filename = \"resume.Rmd\",   output_basename = \"resume\",   app_dir = \"applications\",   input_dir = \"notebooks\",   data_dir = \"input\",   output_dir = \"output\",   use_abridged = FALSE,   sort_appended = FALSE )  render_resume_plain(   target = c(\"app\", \"base\"),   app_id = \"latest\",   app_period = \"latest\",   output_basename = \"resume\",   app_dir = \"applications\",   data_dir = \"input\",   output_dir = \"output\",   use_abridged = FALSE,   sort_appended = FALSE )"},{"path":"https://bainmatt.github.io/autocv/reference/render_resume.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct a resume based on spreadsheet data. — render_resume","text":"render_resume_plain constructs plain text resume analysis.","code":""},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/render_resume.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a resume based on spreadsheet data. — render_resume","text":"","code":"# TODO: just use templates & base"},{"path":"https://bainmatt.github.io/autocv/reference/report_skill_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Display skill report info for at-a-glance viewing. — report_skill_metrics","title":"Display skill report info for at-a-glance viewing. — report_skill_metrics","text":"report_skill_metrics computes basic coverage statistics. sort_skill_report arranges rows convenient viewing order.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/report_skill_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display skill report info for at-a-glance viewing. — report_skill_metrics","text":"","code":"report_skill_metrics(skill_report_df)  sort_skill_report(skill_report_df)"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/run_skill_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain keyword counts for a given doc/term list and generate reports. — run_skill_count","title":"Obtain keyword counts for a given doc/term list and generate reports. — run_skill_count","text":"run_skill_count returns keyword counts given document/term list. check_skills runs run_skill_count posting compares resume. count_terms_base returns keyword counts base resume.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/run_skill_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain keyword counts for a given doc/term list and generate reports. — run_skill_count","text":"","code":"run_skill_count(   app_id = \"latest\",   doc = c(\"posting\", \"resume\"),   term_list_filename = c(\"skill_list.txt\", \"keyword_list.txt\"),   term_list_dir = \"resources\",   log = load_log(),   orderby = c(\"counts\", \"doc\", \"source\"),   filterby = c(\"both\", \"count\", \"matches\"),   overwrite = FALSE,   is_posting_count = FALSE )  check_skills(   app_id = \"latest\",   app_period = \"latest\",   log = load_log(),   orderby = c(\"doc\", \"counts\", \"source\"),   overwrite = FALSE,   check_resume = TRUE )  count_terms_base(   input_dir = \"output\",   term_list_filename = \"skill_list.txt\",   term_list_dir = \"resources\",   orderby = c(\"counts\", \"doc\", \"source\"),   filterby = c(\"both\", \"count\", \"matches\"),   use_abridged = FALSE )"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/run_skill_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a skill report for a given job application. — run_skill_report","title":"Generate a skill report for a given job application. — run_skill_report","text":"Generate skill report given job application.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/run_skill_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a skill report for a given job application. — run_skill_report","text":"","code":"run_skill_report(   app_id = \"latest\",   log = load_log(),   orderby = c(\"source\", \"counts\", \"doc\") )"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/set_project_paths.html","id":null,"dir":"Reference","previous_headings":"","what":"Establish the root directory when building a new project. — set_project_paths","title":"Establish the root directory when building a new project. — set_project_paths","text":"Establish root directory building new project.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/set_project_paths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Establish the root directory when building a new project. — set_project_paths","text":"","code":"set_project_paths(relpath = NULL)"},{"path":"https://bainmatt.github.io/autocv/reference/set_project_paths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Establish the root directory when building a new project. — set_project_paths","text":"relpath desired project path relative working directory.","code":""},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/sort_skills.html","id":null,"dir":"Reference","previous_headings":"","what":"Sort and filter skills. — sort_skills","title":"Sort and filter skills. — sort_skills","text":"Sort filter skills.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/sort_skills.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sort and filter skills. — sort_skills","text":"","code":"sort_skills(skill_data, target = c(\"app\", \"base\"), use_abridged = FALSE)"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/str_to_filename.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a string to a valid file name. — str_to_filename","title":"Convert a string to a valid file name. — str_to_filename","text":"Convert string valid file name.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/str_to_filename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a string to a valid file name. — str_to_filename","text":"","code":"str_to_filename(string, sep = \"-\", lower = TRUE)"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/truncate_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Shorten long strings in a data frame for neater printing. — truncate_string","title":"Shorten long strings in a data frame for neater printing. — truncate_string","text":"Shorten long strings data frame neater printing.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/truncate_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shorten long strings in a data frame for neater printing. — truncate_string","text":"","code":"truncate_string(str, max_length = 20)"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/update_app_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Update application metadata. — update_app_info","title":"Update application metadata. — update_app_info","text":"Update log entry particular application well metadata file. update_app_info updates log metadata user-supplied data. update_datestamp auto-updates application datestamp upon rendering. apply_to sets date_applied datestamp status applied.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/update_app_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update application metadata. — update_app_info","text":"","code":"update_app_info(app_id = \"latest\", ..., log = load_log())  update_datestamp(app_id = \"latest\", log = load_log())  apply_to(app_id = \"latest\", log = load_log())"},{"path":"https://bainmatt.github.io/autocv/reference/update_app_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update application metadata. — update_app_info","text":"... Key-value pairs fields update new values. none provided, log updated directly metadata file. id unique identifier associated application interest.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/update_app_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update application metadata. — update_app_info","text":"Updates application log metadata new information.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/update_app_info.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update application metadata. — update_app_info","text":"following metadata fields (see example_job_metadata) immutable updated using update_app_info: id base_id period company position date_created date_seq","code":""},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/validate_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify that matching job identifiers belong to the same job. — validate_id","title":"Verify that matching job identifiers belong to the same job. — validate_id","text":"Verify matching job identifiers belong job.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/validate_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify that matching job identifiers belong to the same job. — validate_id","text":"","code":"validate_id(log = load_log(), app_df = construct_app_metadata())"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/validate_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify that the supplied status is valid. — validate_status","title":"Verify that the supplied status is valid. — validate_status","text":"Verify supplied status valid.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/validate_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify that the supplied status is valid. — validate_status","text":"","code":"validate_status(   status = c(\"all\", \"ipr\", \"applied\", \"interviewed\", \"rejected\",     \"interviewed_then_rejected\", \"closed\"),   several.ok = FALSE )"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/warn_file_exists.html","id":null,"dir":"Reference","previous_headings":"","what":"Issue a warning that a file or folder already exists at the provided path. — warn_file_exists","title":"Issue a warning that a file or folder already exists at the provided path. — warn_file_exists","text":"warn_file_exists issues warning file already exists. warn_folder_exists issues warning folder already exists.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/warn_file_exists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Issue a warning that a file or folder already exists at the provided path. — warn_file_exists","text":"","code":"warn_file_exists(file, base_dir = \".\", action = \"skipping\")  warn_folder_exists(folder, base_dir = \".\", action = \"skipping\")"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/warn_file_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Issue a warning that a file or folder does not exist at the provided path. — warn_file_missing","title":"Issue a warning that a file or folder does not exist at the provided path. — warn_file_missing","text":"warn_file_missing issues warning file missing. warn_folder_missing issues warning folder missing.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/warn_file_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Issue a warning that a file or folder does not exist at the provided path. — warn_file_missing","text":"","code":"warn_file_missing(file, base_dir = \".\", action = \"aborting\")  warn_folder_missing(folder, base_dir = \".\", action = \"aborting\")"},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/write_app_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Store metadata for a new application. — write_app_metadata","title":"Store metadata for a new application. — write_app_metadata","text":"write_app_metadata saves metadata new application. write_log_entry records current app log present period.","code":""},{"path":"https://bainmatt.github.io/autocv/reference/write_app_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Store metadata for a new application. — write_app_metadata","text":"","code":"write_app_metadata(app_df = construct_app_metadata())  write_log_entry(app_df = construct_app_metadata())"},{"path":"https://bainmatt.github.io/autocv/reference/write_app_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Store metadata for a new application. — write_app_metadata","text":"app_df data frame containing metadata new job application (defaults value returned construct_app_metadata(), constructs new log entry base metadata yaml file). Fields must match log file current period.","code":""},{"path":[]},{"path":"https://bainmatt.github.io/autocv/reference/write_app_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Store metadata for a new application. — write_app_metadata","text":"","code":"data(example_job_metadata) app_df <- construct_app_metadata(app_info = example_job_metadata) # write_app_metadata(app_df = app_df)  # error: the folder doesn't exist  data(example_job_metadata) app_df <- construct_app_metadata(app_info = example_job_metadata) # write_log_entry(app_df = app_df)  # error: the folder doesn't exist"}]
