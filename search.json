[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 autocv authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/example-cv.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Build a CV using autocv","text":"{ install tar (put Readme) }","code":""},{"path":"/articles/example-cv.html","id":"data-prep","dir":"Articles","previous_headings":"","what":"Data prep","title":"Build a CV using autocv","text":"Let’s walk process end--end example using fake data. first step load data, can data() function since datasets using included autocv. Let’s now pre-processing get sections format can displayed R Markdown:","code":"# Load packages library(autocv)  library(glue) library(readxl) library(stringr) library(magrittr, warn.conflicts = FALSE) library(dplyr, warn.conflicts = FALSE)  # Load data and preprocess data(\"example_position_data\", package = \"autocv\") position_data <- example_position_data %>%   autocv::preprocess_entries(     style = \"markdown\",      order = \"reversed\",      bullet_style = \"-\"   )  data(\"example_skill_data\", package = \"autocv\") skill_data <- example_skill_data  data(\"example_contact_data\", package = \"autocv\") contact_data <- example_contact_data %>%    autocv::preprocess_contacts(., style = \"markdown\")  data(\"example_text_data\", package = \"autocv\") text_data <- example_text_data %>%    autocv::preprocess_text() name <- contact_data$address_text[contact_data$loc == \"name\"] role <- text_data$text[text_data$loc == \"title\"] bio <- text_data$text[text_data$loc == \"bio\"] suffix <- contact_data$address_text[contact_data$loc == \"title\"]  pic_text <- glue::glue_collapse(   contact_data[contact_data$loc == \"pic\",]$contact_text ) contact_text <- autocv::print_contact_info(   contact_data,    section = \"both\",    sep = \"\\n\" )"},{"path":"/articles/example-cv.html","id":"margin","dir":"Articles","previous_headings":"","what":"Margin","title":"Build a CV using autocv","text":"first element CV aside, contains contact information skills choose include right margin CV. print following header tell pagedown section starts:","code":"glue(\"# Aside\")"},{"path":"/articles/example-cv.html","id":"contact","dir":"Articles","previous_headings":"Margin","what":"Contact information","title":"Build a CV using autocv","text":"contact card … need following header: print contact card follows: Mississauga, bainmatt@outlook.com (647) 567-2509 Personal Website GitHub LinkedIn","code":"glue(\"## Contact {{#contact}}\") contact_text"},{"path":"/articles/example-cv.html","id":"download-link","dir":"Articles","previous_headings":"Margin","what":"Download link","title":"Build a CV using autocv","text":"may wish include link download … Download PDF","code":"# If `doctype` is html add link to download a pdf version if(params$doctype == \"HTML\"){   paste0(     \"[<i class='fas fa-download'><\/i> Download as a PDF]\",     \"(https://github.com/bainmatt/resume/main/bainmatt_resume.pdf)\"   ) %>%    glue::glue_collapse(sep = \"\\n\") }"},{"path":"/articles/example-cv.html","id":"skills","dir":"Articles","previous_headings":"Margin","what":"Skills","title":"Build a CV using autocv","text":"skills … may wish give sections headers: print corresponding skill bars follows:","code":"glue(\"## Skills\") autocv::build_skill_bars(filter(skill_data, core_tools == \"x\"))"},{"path":"/articles/example-cv.html","id":"datestamp","dir":"Articles","previous_headings":"Margin","what":"Datestamp","title":"Build a CV using autocv","text":"may wish include datestamp … Last updated 2024-06-18","code":"glue(\"Last updated on \", \"{Sys.Date()}\")"},{"path":"/articles/example-cv.html","id":"main-section","dir":"Articles","previous_headings":"","what":"Main section","title":"Build a CV using autocv","text":"print following header tell pagedown section starts:","code":"glue(\"# Main\")"},{"path":"/articles/example-cv.html","id":"title","dir":"Articles","previous_headings":"Main section","what":"Title","title":"Build a CV using autocv","text":"title …","code":"glue(\"## \", \"{name}, \", \"{suffix}\", \" {{#title}}\")"},{"path":"/articles/example-cv.html","id":"role","dir":"Articles","previous_headings":"Main section","what":"Role","title":"Build a CV using autocv","text":"role …","code":"glue(\"### \", \"{role}\")"},{"path":"/articles/example-cv.html","id":"bio","dir":"Articles","previous_headings":"Main section","what":"Bio","title":"Build a CV using autocv","text":"bio one-paragraph-long synopsis bring table ’re looking . example_skill_data() dataset includes two sections, single sentence: experience objective: highly motivated analyst 4+ years experience across academia industry leveraging data advanced statistical models extract value data. Currently seeking data science role can apply object-oriented approach analytics, visualization, machine learning development.","code":"glue(\"{bio}\")"},{"path":"/articles/example-cv.html","id":"position-sections","dir":"Articles","previous_headings":"","what":"Position sections","title":"Build a CV using autocv","text":"remaining sections, ’ll see, printed way: First print header icon font-awesome library. print section using print_section() function.","code":""},{"path":"/articles/example-cv.html","id":"professional-experience","dir":"Articles","previous_headings":"Position sections","what":"Professional Experience","title":"Build a CV using autocv","text":"First print header: print content:","code":"glue(\"## Professional Experience \", \"{{data-icon='suitcase'}}\") autocv::print_section(position_data, 'work')"},{"path":"/articles/example-cv.html","id":"senior-data-scientist","dir":"Articles","previous_headings":"Position sections > Professional Experience","what":"Senior Data Scientist","title":"Build a CV using autocv","text":"Markel Corporation London, Feb 2023 - Jan 2018 Associate Data Scientist (2018-2020) - Data Scientist (2020-2021) Data science developer agile sprint team managing applications prioritize monitor incoming Develops, maintains, deploys machine learning models, primarily GLMs, decision trees, dabbling unsupervised techniques Conducts ad hoc analysis diagnosis trends, analyze model performance, make business recommendations based data statistical tests","code":""},{"path":"/articles/example-cv.html","id":"research-analyst","dir":"Articles","previous_headings":"Position sections > Professional Experience","what":"Research Analyst","title":"Build a CV using autocv","text":"University Western Ontario London, Aug 2022 - Sep 2021 Print journalist public affairs manager 4,000-person organization, supervised three direct reports, advised executive staff, deployed twice Afghanistan","code":""},{"path":"/articles/example-cv.html","id":"manager-analytics","dir":"Articles","previous_headings":"Position sections > Professional Experience","what":"Manager, Analytics","title":"Build a CV using autocv","text":"Markel Corporation Richmond, VA Jan 2022 - Jan 2014 Leads team data scientists data engineers building pilot solutions conducting experimental design Fortune 300 specialty insurance company Leverages test--learn methodology, delivering pilot solutions quickly small groups measure value scaling products","code":""},{"path":"/articles/example-cv.html","id":"cognitive-neuroscientist","dir":"Articles","previous_headings":"Position sections > Professional Experience","what":"Cognitive Neuroscientist","title":"Build a CV using autocv","text":"University Western Ontario London, Aug 2021 - Jul 2018 Master’s Researcher (2018-2020) – Doctoral Researcher (2020-2021) (R, MATLAB) Designed deployed 11 experiments assessing neural processing speech hundreds research subjects (Python) Implemented novel nonparametric statistical framework measure hearing deficits based brain imaging techniques, suggesting avenues improved diagnostic testing Identified optimal hyperparameters behavioural time series analysis, revealing coupled signal fluctuations across people exposed audio designed elicit brain response","code":""},{"path":"/articles/example-cv.html","id":"education","dir":"Articles","previous_headings":"Position sections","what":"Education","title":"Build a CV using autocv","text":"First print header: print content:","code":"glue(\"## Education \", \"{{data-icon='graduation cap' data-concise='true'}}\") autocv::print_section(position_data, 'education')"},{"path":"/articles/example-cv.html","id":"bsc-honours-mathematics-and-statistics","dir":"Articles","previous_headings":"Position sections > Education","what":"BSc (Honours), Mathematics and Statistics","title":"Build a CV using autocv","text":"McMaster University Hamilton, Dec 2023 - Sep 2021","code":""},{"path":"/articles/example-cv.html","id":"msc-neuroscience-thesis","dir":"Articles","previous_headings":"Position sections > Education","what":"MSc, Neuroscience [thesis]","title":"Build a CV using autocv","text":"University Western Ontario London, Aug 2020 - Sep 2018","code":""},{"path":"/articles/example-cv.html","id":"bsc-honours-neuroscience","dir":"Articles","previous_headings":"Position sections > Education","what":"BSc (Honours), Neuroscience","title":"Build a CV using autocv","text":"McMaster University Hamilton, Apr 2018 - Sep 2014","code":""},{"path":"/articles/example-cv.html","id":"certifications","dir":"Articles","previous_headings":"Position sections","what":"Certifications","title":"Build a CV using autocv","text":"First print header: print content:","code":"glue(\"## Certifications \", \"{{data-icon='award' data-concise='true'}}\") autocv::print_section(position_data, 'certifications')"},{"path":"/articles/example-cv.html","id":"x-certificate-certificate","dir":"Articles","previous_headings":"Position sections > Certifications","what":"x [certificate] [certificate]","title":"Build a CV using autocv","text":"N/N/Jun 2024","code":""},{"path":"/articles/example-cv.html","id":"x-certificate-certificate-1","dir":"Articles","previous_headings":"Position sections > Certifications","what":"x [certificate] [certificate]","title":"Build a CV using autocv","text":"N/N/Jun 2024","code":""},{"path":"/articles/example-cv.html","id":"selected-projects","dir":"Articles","previous_headings":"Position sections","what":"Selected Projects","title":"Build a CV using autocv","text":"First print header: print content:","code":"glue(\"## Selected Projects \", \"{{data-icon='code-branch' data-conside='true'}}\") autocv::print_section(position_data, 'projects')"},{"path":"/articles/example-cv.html","id":"datopy-data-tools-for-python-github","dir":"Articles","previous_headings":"Position sections > Selected Projects","what":"datopy (Data Tools for Python) [GitHub]","title":"Build a CV using autocv","text":"N/N/Present - Jan 2024 (PyTest, MyPy, Pydantic, Sphinx, Github Actions)","code":""},{"path":"/articles/example-cv.html","id":"mldive-machine-learning-data-visualization-github","dir":"Articles","previous_headings":"Position sections > Selected Projects","what":"mldive (Machine Learning Data Visualization) [GitHub]","title":"Build a CV using autocv","text":"N/N/Present - Apr 2024","code":""},{"path":"/articles/example-cv.html","id":"adding-position-sections","dir":"Articles","previous_headings":"","what":"Adding position sections","title":"Build a CV using autocv","text":"aren’t restricted particular sections. may wish change add modifying loc column position_data spreadsheet (see example_position_data() dataset reference). possible sections might wish include : Selected Publications Selected Writing Additional Information","code":""},{"path":"/articles/example-cv.html","id":"putting-it-together","dir":"Articles","previous_headings":"","what":"Putting it together","title":"Build a CV using autocv","text":"see finished product looks like, can: Copy/paste code block article R chunk within R Markdown notebook project directory Add following yaml knitr headers top document: Knit. resulting R Markdown notebook look like . Knitting give output .","code":"--- title: \"My resume\" output:   pagedown::html_resume:     self_contained: true params:   doctype: \"HTML\" --- knitr::opts_chunk$set(   results='asis',    echo = FALSE )"},{"path":"/articles/example-cv.html","id":"customization","dir":"Articles","previous_headings":"","what":"Customization","title":"Build a CV using autocv","text":"repository package also includes: Custom css stylesheets: inst/css/custom_resume.css inst/css/styles_html.css inst/css/styles_pdf.css apply styles, modify output field yaml block follows: sophisticated Excel spreadsheets housing resume data multiple sheets, guidelines conditional formatting help adhere : R/data/resume_data.xlsx R/data/cover_data.xlsx Convenience functions rendering resume: render_resume.R Equivalent tools creating resumes cover letters different formats. make tools, recommend clone files corresponding directories computer modify contents following files using ’ve covered : cv.Rmd R/data/resume_data.xlsx View complete example, custom CSS styling applied, . Alternatively, create resume cover letter different format, can try one following. option operates data files. concise LaTeX resume, need: inst/latex/preamble.tex (place custom CSS) resume.Rmd (place cv.Rmd) View example . plain text resume, need: plain_resume.R View example .","code":"output:   pagedown::html_resume:     css: ['inst/css/custom_resume.css', 'inst/css/styles_html.css', 'resume']     self_contained: true"},{"path":"/articles/example-cv.html","id":"diagnositics","dir":"Articles","previous_headings":"","what":"Diagnositics","title":"Build a CV using autocv","text":"One last note. building plain text resume, providing link job posting interest, running [], get various helpful diagnostics free, including breakdown skills, … . example, using fake job posting running [] example data used article, obtain following report, opens plain text file: [] Just make sure clone following files: [] ’s gist . Thanks Nick Strayer laying groundwork package.","code":""},{"path":"/articles/example-cv.html","id":"appendix-other-skills-formats","dir":"Articles","previous_headings":"","what":"Appendix: Other skills formats","title":"Build a CV using autocv","text":"format skills sections list bold headers preset separator character, little additional preparation: list can rendered : Programming: Python, R, SQL • Machine Learning: Scikit-Learn, TensorFlow • DevOps: Git, Github Actions • : ML Pipelines, Data Modeling, CI/CD Pipelines, Hypothesis Testing, Bayesian Inference","code":"skill_list <- autocv::build_skill_list(   autocv::sort_skills(skill_data),    sep = \" • \",   separate_competencies = TRUE,   competencies_header = \"Other\" ) glue(\"{skill_list}\")"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matthew Bain. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bain M (2024). autocv: Generate ATS- Web-Friendly Resume Documents Spreadsheets. R package version 0.0.1.","code":"@Manual{,   title = {autocv: Generate ATS- and Web-Friendly Resume Documents from Spreadsheets},   author = {Matthew Bain},   year = {2024},   note = {R package version 0.0.1}, }"},{"path":"/index.html","id":"autocv","dir":"","previous_headings":"","what":"Generate ATS- and Web-Friendly Resume Documents from Spreadsheets","title":"Generate ATS- and Web-Friendly Resume Documents from Spreadsheets","text":"package houses code template data files used construct variations data-driven curriculum vitae. approach uses R programming language automate repetitive elements job application process, resulting efficient, reproducible, easily customized extended workflow.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Generate ATS- and Web-Friendly Resume Documents from Spreadsheets","text":"package CRAN. like use , can install directly GitHub running following console:","code":"remotes::install_github(\"bainmatt/autocv\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Generate ATS- and Web-Friendly Resume Documents from Spreadsheets","text":"Follow vignette autocv documentation get started. Alternatively, ’re hurry, straightforward way get running : Install project Copy spreadsheets data/ directory Copy stylesheets inst/extdata directory Open resume_data.xlsx cover_data.xlsx modify entries Set paths job info job_data.xlsx Run commands Makefile","code":""},{"path":"/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Generate ATS- and Web-Friendly Resume Documents from Spreadsheets","text":"project inspired , heavily borrows , Nick Strayer’s excellent data-driven cv template (exemplar), builds upon pagedown html_resume template. inspiration design refinements borrowed Matt Leary’s resume repository (examplar). Thank creators projects.","code":""},{"path":"/reference/append_skills_to_bullets.html","id":null,"dir":"Reference","previous_headings":"","what":"Append a link field to a title field with custom text. — append_skills_to_bullets","title":"Append a link field to a title field with custom text. — append_skills_to_bullets","text":"Append link field title field custom text.","code":""},{"path":"/reference/append_skills_to_bullets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append a link field to a title field with custom text. — append_skills_to_bullets","text":"","code":"append_skills_to_bullets(data, ix)"},{"path":"/reference/append_skills_to_bullets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append a link field to a title field with custom text. — append_skills_to_bullets","text":"style style link, either \"markdown\", \"latex\", \"txt\" (plain) macro macro use \"latex\" references","code":""},{"path":[]},{"path":"/reference/autocv-package.html","id":null,"dir":"Reference","previous_headings":"","what":"autocv: Generate ATS- and Web-Friendly Resume Documents from Spreadsheets — autocv-package","title":"autocv: Generate ATS- and Web-Friendly Resume Documents from Spreadsheets — autocv-package","text":"autocv collection functions generating resume data stored spreadsheet. includes tools retrieving job postings web, analyzing key words, assessing resume based alignment key words. Spreadsheet templates provided conditional formatting evaluate quality content skills included resume. Functions spreadsheets generating cover letters, well HTML, PDF, LaTeX, plain text resumes, included. HTML version optimized long-form web-hosted CVs, LaTeX version optimized ATS compatibility.","code":""},{"path":"/reference/autocv-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"autocv: Generate ATS- and Web-Friendly Resume Documents from Spreadsheets — autocv-package","text":"Maintainer: Matthew Bain bainmatt@outlook.com","code":""},{"path":"/reference/autocv_resources.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the location of template data files on your system. — autocv_resources","title":"Find the location of template data files on your system. — autocv_resources","text":"Find location template data files system.","code":""},{"path":"/reference/autocv_resources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the location of template data files on your system. — autocv_resources","text":"","code":"autocv_resources(path = NULL, inst_dir = \"extdata\")"},{"path":[]},{"path":"/reference/autocv_resources.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the location of template data files on your system. — autocv_resources","text":"","code":"# Obtain a complete list of top-level resources included with autocv: autocv_resources() #> [1] \"css\"       \"latex\"     \"resources\"  # Obtain a complete list of resources included in the css/ directory: autocv_resources(\"css\") #> [1] \"custom_resume.css\" \"styles_html.css\"   \"styles_pdf.css\"     # Obtain a complete path to the custom_resume.css resource: autocv_resources(\"css/custom_resume.css\") #> [1] \"/home/runner/.cache/R/renv/library/autocv-e7350c3b/linux-ubuntu-jammy/R-4.4/x86_64-pc-linux-gnu/autocv/extdata/css/custom_resume.css\"  # Obtain a complete list of template files included with autocv: autocv_resources(inst_dir = \"templates\") #> [1] \"template_cover_data.xlsx\"  \"template_job_info.yml\"     #> [3] \"template_resume_data.xlsx\""},{"path":"/reference/build_app_directory.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the file tree and data files for the present app. — build_app_directory","title":"Create the file tree and data files for the present app. — build_app_directory","text":"Create file tree data files present app.","code":""},{"path":"/reference/build_app_directory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the file tree and data files for the present app. — build_app_directory","text":"","code":"build_app_directory(app_df = construct_app_metadata(), base_app_id = NA)"},{"path":[]},{"path":"/reference/build_skill_bars.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a bar chart of skills. — build_skill_bars","title":"Construct a bar chart of skills. — build_skill_bars","text":"Construct bar chart skills.","code":""},{"path":"/reference/build_skill_bars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a bar chart of skills. — build_skill_bars","text":"","code":"build_skill_bars(skill_data)"},{"path":"/reference/build_skill_bars.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Construct a bar chart of skills. — build_skill_bars","text":"Strayer N (2020). datadrivencv. R package version 0.1.0.","code":""},{"path":[]},{"path":"/reference/build_skill_bars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a bar chart of skills. — build_skill_bars","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(ggplot2) data(\"example_skill_data\", package = \"autocv\") technical_skills <- filter(example_skill_data, key_competency == \"x\") build_skill_bars(technical_skills)"},{"path":"/reference/build_skill_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Build skill list. — build_skill_list","title":"Build skill list. — build_skill_list","text":"Build skill list.","code":""},{"path":"/reference/build_skill_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build skill list. — build_skill_list","text":"","code":"build_skill_list(   skill_data,   sep = c(\" • \", \"\\n\"),   separate_competencies = TRUE,   competencies_header = \"Other\" )"},{"path":[]},{"path":"/reference/build_skill_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a two-column table of skills. — build_skill_table","title":"Build a two-column table of skills. — build_skill_table","text":"Returns string text can rendered LaTeX.","code":""},{"path":"/reference/build_skill_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a two-column table of skills. — build_skill_table","text":"","code":"build_skill_table(skill_data)"},{"path":"/reference/build_skill_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a two-column table of skills. — build_skill_table","text":"skill_data data frame containing skill data.","code":""},{"path":"/reference/build_skill_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a two-column table of skills. — build_skill_table","text":"LaTeX string.","code":""},{"path":[]},{"path":"/reference/build_skill_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build a two-column table of skills. — build_skill_table","text":"","code":"# Define some data ---------------------------------------------------------- library(dplyr, warn.conflicts = FALSE) skill <- c(\"R\", \"SQL\", \"Excel\", \"Pandas\", \"Feature Engineering\") alias <- c(\"Coding\", \"Coding\", \"Data Analysis\", \"Data Analysis\", \"ML\") skill_data <- dplyr::bind_cols(alias, skill) #> New names: #> • `` -> `...1` #> • `` -> `...2` colnames(skill_data) <- c(\"alias\", \"skill\") print(skill_data) #> # A tibble: 5 × 2 #>   alias         skill               #>   <chr>         <chr>               #> 1 Coding        R                   #> 2 Coding        SQL                 #> 3 Data Analysis Excel               #> 4 Data Analysis Pandas              #> 5 ML            Feature Engineering   # Render -------------------------------------------------------------------- skill_table <- build_skill_table(skill_data) paste(skill_table) #> [1] \"\\\\begin{tabular}{@{}p{0.475\\\\linewidth}p{0.475\\\\linewidth}@{}}\\n\\\\textbf{Coding:} R, SQL&\\\\textbf{Data Analysis:} Excel, Pandas\\\\\\\\\\\\textbf{ML:} Feature Engineering&\\\\end{tabular}\\n\\n\"  # With a larger dataset ----------------------------------------------------- data(\"example_skill_data\", package = \"autocv\") skill_table <- build_skill_table(example_skill_data) paste(skill_table) #> [1] \"\\\\begin{tabular}{@{}p{0.475\\\\linewidth}p{0.475\\\\linewidth}@{}}\\n\\\\textbf{Programming:} R, SQL, Python, MATLAB, Bash&\\\\textbf{Data Analysis:} Beautiful Soup, Web Scraping, Data Preprocessing, NumPy, SciPy, Excel, Pandas, ArviZ, dplyr (R), SymPy\\\\\\\\\\\\textbf{Machine Learning:} Feature Engineering, Hyperparameter Tuning, Model Optimization, Model Tuning, TensorFlow, Scikit-Learn, ML Pipelines, Supervised Learning, Unsupervised Learning, Dimensionality Reduction, Keras&\\\\textbf{NLP:} LLMs, Topic Modeling, SpaCy, Transformer Models, Hugging Face\\\\\\\\\\\\textbf{Data Visualization:} Matplotlib, ggplot (R), Seaborn (Python), Tableau&\\\\textbf{Data Management:} Data Modeling, Data Pipelines, Data Validation, NoSQL, Snowflake, PostgreSQL, MySQL, Cassandra, MongoDB, Database Design\\\\\\\\\\\\textbf{Python Development:} MyPy, PyTest, Sphinx, Pydantic&\\\\textbf{DevOps:} Continuous Testing, CI/CD Pipelines, Git, Github Actions, Object-Oriented Programming (OOP)\\\\\\\\\\\\textbf{Big Data:} Databricks, Hadoop, Spark, Azure, Google Cloud Platform (GCP), Vertex AI&\\\\textbf{MLOps:} Kubernetes, Model Deployment, Docker\\\\\\\\\\\\textbf{Document Authoring:} LaTeX, Jupyter Notebooks, Google Colab, R Markdown, VSCode&\\\\textbf{Web Development:} CSS, HTML, Javascript\\\\\\\\\\\\textbf{Statistics:} Bayesian Inference, Hypothesis Testing, Statistical Learning, Probability Theory, Statistical Modeling, Convex Optimization, Time Series Analysis, Regression Analysis, Graph Theory, Causal Inference, Matrix Calculus&\\\\textbf{Soft Skills:} Scientific Writing, Experimental Design, Critical Thinking, Documentation Writing, Electroencephalography (EEG), Functional Magnetic Resonance Imaging (fMRI)\\\\\\\\\\\\end{tabular}\\n\\n\""},{"path":"/reference/construct_app_filepath.html","id":null,"dir":"Reference","previous_headings":"","what":"Take an application config object and produce the target dir. — construct_app_filepath","title":"Take an application config object and produce the target dir. — construct_app_filepath","text":"Take application config object produce target dir.","code":""},{"path":"/reference/construct_app_filepath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Take an application config object and produce the target dir. — construct_app_filepath","text":"","code":"construct_app_filepath(app_info = load_job_info())"},{"path":[]},{"path":"/reference/construct_app_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the metadata for a new application. — construct_app_metadata","title":"Create the metadata for a new application. — construct_app_metadata","text":"information also used construct application log entry.","code":""},{"path":"/reference/construct_app_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the metadata for a new application. — construct_app_metadata","text":"","code":"construct_app_metadata(   metadata_filename = \"job_metadata.yml\",   metadata_dir = \"input\" )"},{"path":[]},{"path":"/reference/count_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Count keyword occurrences in a file based on a supplied list. — count_terms","title":"Count keyword occurrences in a file based on a supplied list. — count_terms","text":"Count keyword occurrences file based supplied list.","code":""},{"path":"/reference/count_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count keyword occurrences in a file based on a supplied list. — count_terms","text":"","code":"count_terms(terms, counts = NA, document, order = c(\"bysource\", \"bycount\"))"},{"path":[]},{"path":"/reference/count_terms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count keyword occurrences in a file based on a supplied list. — count_terms","text":"","code":"# Get resume counts ---------------------------------------------------------  # Load example data data(\"example_posting\", package = \"autocv\") terms <- readLines(autocv_resources(\"resources/skill_list.txt\"))  posting_counts <- count_terms(   terms = terms,   document = example_posting,    order = \"bysource\" ) #> New names: #> • `` -> `...1` #> • `` -> `...2`  posting_counts #> # A tibble: 19 × 2 #>    terms                        counts #>    <chr>                         <dbl> #>  1 Python                            1 #>  2 SQL                               1 #>  3 XP                                1 #>  4 Decision-Making                   1 #>  5 Analytic Frameworks               1 #>  6 People Analytics                  1 #>  7 Statistics                        1 #>  8 Communication Skills              1 #>  9 Written Communication Skills      1 #> 10 Written Communication             1 #> 11 Flexibility                       1 #> 12 Data Science                      1 #> 13 Metrics                           1 #> 14 Insights                          1 #> 15 Product Managers                  1 #> 16 UI                                1 #> 17 Cross-Functional                  1 #> 18 Applied Math                      1 #> 19 Economics                         1"},{"path":"/reference/download_webpage_txt.html","id":null,"dir":"Reference","previous_headings":"","what":"Save the text from a webpage url. — download_webpage_txt","title":"Save the text from a webpage url. — download_webpage_txt","text":"download_webpage_txt saves output .txt file. download_webpage_pdf saves output .pdf file.","code":""},{"path":"/reference/download_webpage_txt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save the text from a webpage url. — download_webpage_txt","text":"","code":"download_webpage_txt(   url,   output_filepath = NA,   output_dir = \"input\",   output_filename = \"posting.txt\" )  download_webpage_pdf(   url,   output_filepath = NA,   output_dir = \"input\",   output_filename = \"posting.pdf\" )"},{"path":"/reference/download_webpage_txt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save the text from a webpage url. — download_webpage_txt","text":"url web address job posting. output_file desired output filepath.","code":""},{"path":[]},{"path":"/reference/download_webpage_txt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save the text from a webpage url. — download_webpage_txt","text":"","code":"library(rvest, warn.conflicts = FALSE) url <- \"https://en.wikipedia.org/wiki/R_(programming_language)\" fil <- tempfile(\"file\", tempdir(), fileext = \".txt\") download_webpage_txt(url, fil) #> ✔ posting file created at ../../../../../../../tmp/RtmpMgyB64/file99d243133405.txt #> ✔ writing posting to '../../../../../../../tmp/RtmpMgyB64/file99d243133405.txt' readLines(fil, n = 1) #> [1] \"R (programming language) - Wikipedia(function(){var className=\\\"client-js vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-sticky-header-disabled vector-feature-page-tools-pinned-disabled vector-feature-toc-pinned-clientpref-1 vector-feature-main-menu-pinned-disabled vector-feature-limited-width-clientpref-1 vector-feature-limited-width-content-enabled vector-feature-custom-font-size-clientpref-1 vector-feature-appearance-enabled vector-feature-appearance-pinned-clientpref-1 vector-feature-night-mode-disabled skin-theme-clientpref-day vector-toc-available\\\";var cookie=document.cookie.match(/(?:^|; )enwikimwclientpreferences=([^;]+)/);if(cookie){cookie[1].split('%2C').forEach(function(pref){className=className.replace(new RegExp('(^| )'+pref.replace(/-clientpref-\\\\w+$|[^\\\\w-]+/g,'')+'-clientpref-\\\\\\\\w+( |$)'),'$1'+pref+'$2');});}document.documentElement.className=className;}());RLCONF={\\\"wgBreakFrames\\\":false,\\\"wgSeparatorTransformTable\\\":[\\\"\\\",\\\"\\\"],\\\"wgDigitTransformTable\\\":[\"  unlink(fil)  url <- \"https://stat.ethz.ch/R-manual/R-devel/library/utils/html/download.file.html\" fil <- tempfile(\"file\", tempdir(), fileext = \".pdf\") download_webpage_pdf(url, fil) unlink(fil)"},{"path":"/reference/example_skill_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Example skill dataset — example_skill_data","title":"Example skill dataset — example_skill_data","text":"subset data World Health Organization Global Tuberculosis Report ...","code":""},{"path":"/reference/example_skill_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example skill dataset — example_skill_data","text":"","code":"example_skill_data"},{"path":[]},{"path":"/reference/example_skill_data.html","id":"example-skill-data","dir":"Reference","previous_headings":"","what":"example_skill_data","title":"Example skill dataset — example_skill_data","text":"data frame 7,240 rows 60 columns: country Country name iso2, iso3 2 & 3 letter ISO country codes year Year","code":""},{"path":"/reference/example_skill_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example skill dataset — example_skill_data","text":"https://www..int/teams/global-tuberculosis-programme/data","code":""},{"path":"/reference/get_app_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Access and open application files. — get_app_info","title":"Access and open application files. — get_app_info","text":"get_app_info retrieves requested info given application log. get_path_to_app returns abs path document given application. open_app opens requested document given application.","code":""},{"path":"/reference/get_app_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access and open application files. — get_app_info","text":"","code":"get_app_info(   id = \"all\",   field = \"all\",   company = NA,   position = NA,   app_dir = \"applications\",   app_period = \"latest\" )  get_path_to_app(   id,   document,   company = NA,   position = NA,   app_dir = \"applications\",   app_period = \"latest\" )  open_app(   id = \"latest\",   document = \"resume\",   company = NA,   position = NA,   app_dir = \"applications\",   app_period = \"latest\" )"},{"path":[]},{"path":"/reference/get_path_to.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct an absolute path to a project directory for saving and loading. — get_path_to","title":"Construct an absolute path to a project directory for saving and loading. — get_path_to","text":"function constructs absolute path specified project directory. Directory paths, relative project root, defined user's .Rprofile environment variables.","code":""},{"path":"/reference/get_path_to.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct an absolute path to a project directory for saving and loading. — get_path_to","text":"","code":"get_path_to(   dir = c(\"src\", \"input\", \"output\", \"applications\", \"notebooks\", \"templates\", \"extdata\",     \"css\", \"latex\", \"resources\") )"},{"path":"/reference/get_path_to.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct an absolute path to a project directory for saving and loading. — get_path_to","text":"dir (string) directory name.","code":""},{"path":[]},{"path":"/reference/get_path_to.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct an absolute path to a project directory for saving and loading. — get_path_to","text":"","code":"# get_path_to(\"src\")"},{"path":"/reference/load_application_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Load application data (resume or cover letter). — load_application_data","title":"Load application data (resume or cover letter). — load_application_data","text":"Load application data (resume cover letter).","code":""},{"path":"/reference/load_application_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load application data (resume or cover letter). — load_application_data","text":"","code":"load_application_data(   data_dir = \"input\",   filename = \"resume_data.xlsx\",   sheet = c(\"entries\", \"skills\", \"contact_info\", \"text_blocks\"),   skip = 1 )"},{"path":[]},{"path":"/reference/load_job_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Read user-defined metadata for the present job from a config file. — load_job_info","title":"Read user-defined metadata for the present job from a config file. — load_job_info","text":"Read user-defined metadata present job config file.","code":""},{"path":"/reference/load_job_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read user-defined metadata for the present job from a config file. — load_job_info","text":"","code":"load_job_info(field = \"all\", filename = \"job_metadata.yml\", dir = \"input\")"},{"path":"/reference/load_job_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read user-defined metadata for the present job from a config file. — load_job_info","text":"nested named list strings user-specified job details","code":""},{"path":[]},{"path":"/reference/load_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Load the log for a given application period. — load_log","title":"Load the log for a given application period. — load_log","text":"Load log given application period.","code":""},{"path":"/reference/load_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load the log for a given application period. — load_log","text":"","code":"load_log(app_dir = \"applications\", app_period = \"latest\")"},{"path":[]},{"path":"/reference/make_markdown_contacts.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare individual entry in contact info card. — make_markdown_contacts","title":"Prepare individual entry in contact info card. — make_markdown_contacts","text":"make_markdown_contacts prepares individual markdown entry. make_latex_contacts prepares individual LaTeX entry. make_txt_contacts prepares individual plain text entry.","code":""},{"path":"/reference/make_markdown_contacts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare individual entry in contact info card. — make_markdown_contacts","text":"","code":"make_markdown_contacts(contact_data)  make_latex_contacts(contact_data, macro)  make_txt_contacts(contact_data)"},{"path":"/reference/make_markdown_contacts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare individual entry in contact info card. — make_markdown_contacts","text":"contact_data data frame containing contact data. macro desired LaTeX macro use rendering hyperlinks.","code":""},{"path":[]},{"path":"/reference/match_pattern.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for term matches embedded in text. — match_pattern","title":"Check for term matches embedded in text. — match_pattern","text":"Check term matches embedded text.","code":""},{"path":"/reference/match_pattern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for term matches embedded in text. — match_pattern","text":"","code":"match_pattern(term, text)"},{"path":"/reference/match_pattern.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for term matches embedded in text. — match_pattern","text":"term Text check.","code":""},{"path":[]},{"path":"/reference/omit_hidden_fields.html","id":null,"dir":"Reference","previous_headings":"","what":"Omit spreadsheet entries beginning with a preset prefix. — omit_hidden_fields","title":"Omit spreadsheet entries beginning with a preset prefix. — omit_hidden_fields","text":"Omit spreadsheet entries beginning preset prefix.","code":""},{"path":"/reference/omit_hidden_fields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Omit spreadsheet entries beginning with a preset prefix. — omit_hidden_fields","text":"","code":"omit_hidden_fields(data, style = \"markdown\", prefix = \"/\")"},{"path":[]},{"path":"/reference/prepare_bio.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare bio. — prepare_bio","title":"Prepare bio. — prepare_bio","text":"Prepare bio.","code":""},{"path":"/reference/prepare_bio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare bio. — prepare_bio","text":"","code":"prepare_bio(text_data)"},{"path":"/reference/prepare_bio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare bio. — prepare_bio","text":"text_data spreadsheet containing resume text data.","code":""},{"path":[]},{"path":"/reference/prepare_description_bullets.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare entry descriptions. — prepare_description_bullets","title":"Prepare entry descriptions. — prepare_description_bullets","text":"Prepare entry descriptions.","code":""},{"path":"/reference/prepare_description_bullets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare entry descriptions. — prepare_description_bullets","text":"","code":"prepare_description_bullets(data, bullet_style = c(\"-\", \"+\"))"},{"path":[]},{"path":"/reference/prepare_links.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare properly formatted links with custom text. — prepare_links","title":"Prepare properly formatted links with custom text. — prepare_links","text":"Prepare properly formatted links custom text.","code":""},{"path":"/reference/prepare_links.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare properly formatted links with custom text. — prepare_links","text":"","code":"prepare_links(   data,   style = c(\"markdown\", \"latex\", \"txt\"),   macro = c(\"myhref\", \"href\", NA) )"},{"path":"/reference/prepare_links.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare properly formatted links with custom text. — prepare_links","text":"style style link, either \"markdown\", \"latex\", \"txt\" (plain) macro macro use \"latex\" references","code":""},{"path":[]},{"path":"/reference/prepare_timeline.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare dates. — prepare_timeline","title":"Prepare dates. — prepare_timeline","text":"Prepare dates.","code":""},{"path":"/reference/prepare_timeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare dates. — prepare_timeline","text":"","code":"prepare_timeline(data, order = c(\"chronological\", \"reversed\"))"},{"path":"/reference/prepare_timeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare dates. — prepare_timeline","text":"data spreadsheet containing position data.","code":""},{"path":[]},{"path":"/reference/preprocess_contacts.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare contact info card. — preprocess_contacts","title":"Prepare contact info card. — preprocess_contacts","text":"Prepare contact info card.","code":""},{"path":"/reference/preprocess_contacts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare contact info card. — preprocess_contacts","text":"","code":"preprocess_contacts(   contact_data,   style = c(\"markdown\", \"latex\", \"txt\"),   macro = c(\"myhref\", \"href\", NA) )"},{"path":[]},{"path":"/reference/preprocess_entries.html","id":null,"dir":"Reference","previous_headings":"","what":"Run each resume data pre-processing step in sequence. — preprocess_entries","title":"Run each resume data pre-processing step in sequence. — preprocess_entries","text":"Run resume data pre-processing step sequence.","code":""},{"path":"/reference/preprocess_entries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run each resume data pre-processing step in sequence. — preprocess_entries","text":"","code":"preprocess_entries(   entry_data,   style = c(\"markdown\", \"latex\", \"txt\"),   order = c(\"chronological\", \"reversed\"),   bullet_style = c(\"-\", \"+\") )"},{"path":[]},{"path":"/reference/preprocess_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare text blocks. — preprocess_text","title":"Prepare text blocks. — preprocess_text","text":"Prepare text blocks.","code":""},{"path":"/reference/preprocess_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare text blocks. — preprocess_text","text":"","code":"preprocess_text(text_data, style = c(\"markdown\", \"latex\", \"txt\"))"},{"path":[]},{"path":"/reference/print_contact_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Print contact info. — print_contact_info","title":"Print contact info. — print_contact_info","text":"Print contact info.","code":""},{"path":"/reference/print_contact_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print contact info. — print_contact_info","text":"","code":"print_contact_info(   contact_data,   section = c(\"info\", \"links\", \"both\"),   sep = c(\" | \", \"\\n\") )"},{"path":"/reference/print_latex_section.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a section from a position dataframe to LaTeX. — print_latex_section","title":"Print a section from a position dataframe to LaTeX. — print_latex_section","text":"Print section position dataframe LaTeX.","code":""},{"path":"/reference/print_latex_section.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a section from a position dataframe to LaTeX. — print_latex_section","text":"","code":"print_latex_section(position_data, section_id, short_entries = FALSE)"},{"path":[]},{"path":"/reference/print_section.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a section from a position dataframe to markdown. — print_section","title":"Print a section from a position dataframe to markdown. — print_section","text":"Print section position dataframe markdown.","code":""},{"path":"/reference/print_section.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a section from a position dataframe to markdown. — print_section","text":"","code":"print_section(position_data, section_id)"},{"path":[]},{"path":"/reference/print_txt_section.html","id":null,"dir":"Reference","previous_headings":"","what":"Print sections of a plain text resume. — print_txt_section","title":"Print sections of a plain text resume. — print_txt_section","text":"Print sections plain text resume.","code":""},{"path":"/reference/print_txt_section.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print sections of a plain text resume. — print_txt_section","text":"","code":"print_txt_section(position_data)"},{"path":[]},{"path":"/reference/render_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Run each resume/CV rendering option in sequence. — render_all","title":"Run each resume/CV rendering option in sequence. — render_all","text":"Run resume/CV rendering option sequence.","code":""},{"path":"/reference/render_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run each resume/CV rendering option in sequence. — render_all","text":"","code":"render_all()"},{"path":[]},{"path":"/reference/render_cv_as_html.html","id":null,"dir":"Reference","previous_headings":"","what":"Build an informal HTML-format resume based on spreadsheet data. — render_cv_as_html","title":"Build an informal HTML-format resume based on spreadsheet data. — render_cv_as_html","text":"Build informal HTML-format resume based spreadsheet data.","code":""},{"path":"/reference/render_cv_as_html.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build an informal HTML-format resume based on spreadsheet data. — render_cv_as_html","text":"","code":"render_cv_as_html(   input_filename = \"cv.Rmd\",   data_filename = \"resume_data.xlsx\",   output_basename = \"cv\",   input_dir = \"notebooks\",   data_dir = \"input\",   output_dir = \"output\",   stylesheets = list(\"custom_resume.css\", \"styles_html.css\") )"},{"path":[]},{"path":"/reference/render_cv_as_pdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a pdf export of a web-formatted resume based on spreadsheet data. — render_cv_as_pdf","title":"Create a pdf export of a web-formatted resume based on spreadsheet data. — render_cv_as_pdf","text":"Create pdf export web-formatted resume based spreadsheet data.","code":""},{"path":"/reference/render_cv_as_pdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a pdf export of a web-formatted resume based on spreadsheet data. — render_cv_as_pdf","text":"","code":"render_cv_as_pdf(   input_filename = \"cv.Rmd\",   data_filename = \"resume_data.xlsx\",   output_basename = \"cv\",   input_dir = \"notebooks\",   data_dir = \"input\",   output_dir = \"output\",   stylesheets = list(\"custom_resume.css\", \"styles_pdf.css\") )"},{"path":[]},{"path":"/reference/render_resume.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a LaTeX-rendered pdf of a resume based on spreadsheet data. — render_resume","title":"Build a LaTeX-rendered pdf of a resume based on spreadsheet data. — render_resume","text":"Build LaTeX-rendered pdf resume based spreadsheet data.","code":""},{"path":"/reference/render_resume.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a LaTeX-rendered pdf of a resume based on spreadsheet data. — render_resume","text":"","code":"render_resume(   input_filename = \"resume.Rmd\",   data_filename = \"resume_data.xlsx\",   output_basename = \"resume\",   input_dir = \"notebooks\",   data_dir = \"input\",   output_dir = \"output\",   stylesheets = list(\"custom_resume.tex\") )"},{"path":[]},{"path":"/reference/render_resume_plain.html","id":null,"dir":"Reference","previous_headings":"","what":"Build an plain text resume based on spreadsheet data. — render_resume_plain","title":"Build an plain text resume based on spreadsheet data. — render_resume_plain","text":"Build plain text resume based spreadsheet data.","code":""},{"path":"/reference/render_resume_plain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build an plain text resume based on spreadsheet data. — render_resume_plain","text":"","code":"render_resume_plain(   input_filename = \"plain.Rmd\",   data_filename = \"resume_data.xlsx\",   output_basename = \"resume\",   input_dir = \"notebooks\",   data_dir = \"input\",   output_dir = \"output\" )"},{"path":[]},{"path":"/reference/run_skill_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain keyword counts for a given document/term list and generate reports. — run_skill_count","title":"Obtain keyword counts for a given document/term list and generate reports. — run_skill_count","text":"run_skill_count returns keyword counts given document/term list. check_skills obtains skill counts posting creates resume report","code":""},{"path":"/reference/run_skill_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain keyword counts for a given document/term list and generate reports. — run_skill_count","text":"","code":"run_skill_count(   app_id,   app_period = \"latest\",   document = c(\"posting\", \"resume\"),   term_list_filename = c(\"skill_list.txt\", \"keyword_list.txt\"),   term_list_dir = \"resources\" )  check_skills(   app_id,   app_period = \"latest\",   document = list(\"posting\", \"resume\"),   term_list_filename = c(\"skill_list.txt\", \"keyword_list.txt\"),   term_list_dir = \"resources\" )"},{"path":[]},{"path":"/reference/run_skill_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a skill report for a given job application. — run_skill_report","title":"Generate a skill report for a given job application. — run_skill_report","text":"Generate skill report given job application.","code":""},{"path":"/reference/run_skill_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a skill report for a given job application. — run_skill_report","text":"","code":"run_skill_report(app_id, app_period = \"latest\")"},{"path":[]},{"path":"/reference/sort_skills.html","id":null,"dir":"Reference","previous_headings":"","what":"Sort skills. — sort_skills","title":"Sort skills. — sort_skills","text":"Sort skills.","code":""},{"path":"/reference/sort_skills.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sort skills. — sort_skills","text":"","code":"sort_skills(skill_data)"},{"path":[]},{"path":"/reference/str_to_filename.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a string to a valid file name. — str_to_filename","title":"Convert a string to a valid file name. — str_to_filename","text":"Convert string valid file name.","code":""},{"path":"/reference/str_to_filename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a string to a valid file name. — str_to_filename","text":"","code":"str_to_filename(string, separator = \"-\", lower = TRUE)"},{"path":[]},{"path":"/reference/validate_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify that matching job identifiers belong to the same job. — validate_id","title":"Verify that matching job identifiers belong to the same job. — validate_id","text":"Verify matching job identifiers belong job.","code":""},{"path":"/reference/validate_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify that matching job identifiers belong to the same job. — validate_id","text":"","code":"validate_id(log_data, app_df)"},{"path":[]},{"path":"/reference/write_app_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Save the metadata for a new application. — write_app_metadata","title":"Save the metadata for a new application. — write_app_metadata","text":"Save metadata new application.","code":""},{"path":"/reference/write_app_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save the metadata for a new application. — write_app_metadata","text":"","code":"write_app_metadata(app_df = construct_app_metadata())"},{"path":[]},{"path":"/reference/write_log_entry.html","id":null,"dir":"Reference","previous_headings":"","what":"Record the current application in the log for the present period. — write_log_entry","title":"Record the current application in the log for the present period. — write_log_entry","text":"Record current application log present period.","code":""},{"path":"/reference/write_log_entry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Record the current application in the log for the present period. — write_log_entry","text":"","code":"write_log_entry(app_df = construct_app_metadata())"},{"path":[]}]
